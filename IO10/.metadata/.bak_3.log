!SESSION 2021-03-02 09:56:50.522 -----------------------------------------------
eclipse.buildId=2018.2
java.version=1.8.0_112
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=zh_CN
Command-line arguments:  -os win32 -ws win32 -arch x86_64

This is a continuation of log file D:\Users\xin.han\Desktop\ram_ls\IO10\.metadata\.bak_2.log
Created Time: 2021-03-02 14:45:53.327

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.327
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.350
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0], Result: [null, {"axi_dma_4_S_AXI_LITE": {"name": "axi_dma_4",
"base": "0x80400000",
"high": "0x8040FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_dma_5_S_AXI_LITE": {"name": "axi_dma_5",
"base": "0x80410000",
"high": "0x8041FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_gpio_0_S_AXI": {"name": "axi_gpio_0",
"base": "0x81200000",
"high": "0x8120FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_iic_0_S_AXI": {"name": "axi_iic_0",
"base": "0x81600000",
"high": "0x8160FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_0_AXI_LITE": {"name": "axi_quad_spi_0",
"base": "0x81E00000",
"high": "0x81E0FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_0_S_AXI": {"name": "axi_uart16550_0",
"base": "0x83C00000",
"high": "0x83C0FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_1_S_AXI": {"name": "axi_uart16550_1",
"base": "0x83C10000",
"high": "0x83C1FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_2_S_AXI": {"name": "axi_uart16550_2",
"base": "0x83C20000",
"high": "0x83C2FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_3_S_AXI": {"name": "axi_uart16550_3",
"base": "0x83C30000",
"high": "0x83C3FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_4_S_AXI": {"name": "axi_uart16550_4",
"base": "0x83C40000",
"high": "0x83C4FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_5_S_AXI": {"name": "axi_uart16550_5",
"base": "0x83C50000",
"high": "0x83C5FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_6_S_AXI": {"name": "axi_uart16550_6",
"base": "0x83C60000",
"high": "0x83C6FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_7_S_AXI": {"name": "axi_uart16550_7",
"base": "0x83C70000",
"high": "0x83C7FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_8_S_AXI": {"name": "axi_uart16550_8",
"base": "0x83C80000",
"high": "0x83C8FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_9_S_AXI": {"name": "axi_uart16550_9",
"base": "0x83C90000",
"high": "0x83C9FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_10_S_AXI": {"name": "axi_uart16550_10",
"base": "0x83CA0000",
"high": "0x83CAFFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_11_S_AXI": {"name": "axi_uart16550_11",
"base": "0x83CB0000",
"high": "0x83CBFFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_0": {"name": "ps7_afi_0",
"base": "0xF8008000",
"high": "0xF8008FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_1": {"name": "ps7_afi_1",
"base": "0xF8009000",
"high": "0xF8009FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_2": {"name": "ps7_afi_2",
"base": "0xF800A000",
"high": "0xF800AFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_3": {"name": "ps7_afi_3",
"base": "0xF800B000",
"high": "0xF800BFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_coresight_comp_0": {"name": "ps7_coresight_comp_0",
"base": "0xF8800000",
"high": "0xF88FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ddrc_0": {"name": "ps7_ddrc_0",
"base": "0xF8006000",
"high": "0xF8006FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dev_cfg_0": {"name": "ps7_dev_cfg_0",
"base": "0xF8007000",
"high": "0xF80070FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dma_ns": {"name": "ps7_dma_ns",
"base": "0xF8004000",
"high": "0xF8004FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dma_s": {"name": "ps7_dma_s",
"base": "0xF8003000",
"high": "0xF8003FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ethernet_0": {"name": "ps7_ethernet_0",
"base": "0xE000B000",
"high": "0xE000BFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_globaltimer_0": {"name": "ps7_globaltimer_0",
"base": "0xF8F00200",
"high": "0xF8F002FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_gpio_0": {"name": "ps7_gpio_0",
"base": "0xE000A000",
"high": "0xE000AFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_gpv_0": {"name": "ps7_gpv_0",
"base": "0xF8900000",
"high": "0xF89FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_intc_dist_0": {"name": "ps7_intc_dist_0",
"base": "0xF8F01000",
"high": "0xF8F01FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_iop_bus_config_0": {"name": "ps7_iop_bus_config_0",
"base": "0xE0200000",
"high": "0xE0200FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_l2cachec_0": {"name": "ps7_l2cachec_0",
"base": "0xF8F02000",
"high": "0xF8F02FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ocmc_0": {"name": "ps7_ocmc_0",
"base": "0xF800C000",
"high": "0xF800CFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_pl310_0": {"name": "ps7_pl310_0",
"base": "0xF8F02000",
"high": "0xF8F02FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_pmu_0": {"name": "ps7_pmu_0",
"base": "0xF8893000",
"high": "0xF8893FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_qspi_0": {"name": "ps7_qspi_0",
"base": "0xE000D000",
"high": "0xE000DFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_qspi_linear_0": {"name": "ps7_qspi_linear_0",
"base": "0xFC000000",
"high": "0xFCFFFFFF",
"size": "16777216",
"slaveintf": "",
"type": "FLASH",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scuc_0": {"name": "ps7_scuc_0",
"base": "0xF8F00000",
"high": "0xF8F000FC",
"size": "253",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scugic_0": {"name": "ps7_scugic_0",
"base": "0xF8F00100",
"high": "0xF8F001FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scutimer_0": {"name": "ps7_scutimer_0",
"base": "0xF8F00600",
"high": "0xF8F0061F",
"size": "32",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scuwdt_0": {"name": "ps7_scuwdt_0",
"base": "0xF8F00620",
"high": "0xF8F006FF",
"size": "224",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_slcr_0": {"name": "ps7_slcr_0",
"base": "0xF8000000",
"high": "0xF8000FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_uart_1": {"name": "ps7_uart_1",
"base": "0xE0001000",
"high": "0xE0001FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_xadc_0": {"name": "ps7_xadc_0",
"base": "0xF8007100",
"high": "0xF8007120",
"size": "33",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_0_S_AXI_Mem0": {"name": "axi_bram_ctrl_0",
"base": "0x40000000",
"high": "0x4000FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_1_S_AXI_Mem0": {"name": "axi_bram_ctrl_1",
"base": "0x42000000",
"high": "0x42001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_2_S_AXI_Mem0": {"name": "axi_bram_ctrl_2",
"base": "0x44000000",
"high": "0x44001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_3_S_AXI_Mem0": {"name": "axi_bram_ctrl_3",
"base": "0x46000000",
"high": "0x46001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_4_S_AXI_Mem0": {"name": "axi_bram_ctrl_4",
"base": "0x48000000",
"high": "0x48001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_5_S_AXI_Mem0": {"name": "axi_bram_ctrl_5",
"base": "0x4A000000",
"high": "0x4A001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_6_S_AXI_Mem0": {"name": "axi_bram_ctrl_6",
"base": "0x4C000000",
"high": "0x4C001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_7_S_AXI_Mem0": {"name": "axi_bram_ctrl_7",
"base": "0x4E000000",
"high": "0x4E001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_8_S_AXI_Mem0": {"name": "axi_bram_ctrl_8",
"base": "0x50000000",
"high": "0x50001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"ps7_ddr_0": {"name": "ps7_ddr_0",
"base": "0x00100000",
"high": "0x3FFFFFFF",
"size": "1072693248",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ram_0": {"name": "ps7_ram_0",
"base": "0x00000000",
"high": "0x0002FFFF",
"size": "196608",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ram_1": {"name": "ps7_ram_1",
"base": "0xFFFF0000",
"high": "0xFFFFFDFF",
"size": "65024",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
}]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.351
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_ENABLED], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.353
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_ENABLED], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.353
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_EVENT_COUNTERS], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.355
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_EVENT_COUNTERS], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.355
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_LATENCY_COUNTERS], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.357
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_LATENCY_COUNTERS], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.357
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_COUNTER_WIDTH], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.358
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_COUNTER_WIDTH], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.359
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_FREQ], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.360
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_FREQ], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.360
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_CPU_CLK_FREQ_HZ], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.361
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_CPU_CLK_FREQ_HZ], Result: [null, 675000000]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.362
!MESSAGE XSCT Command: [::hsi::utils::get_cpu_nr -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.365
!MESSAGE XSCT command with result: [::hsi::utils::get_cpu_nr -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, {"ps7_cortexa9_0": {"bscan": "",
"index": "0",
},
"ps7_cortexa9_1": {"bscan": "",
"index": "1",
},
}]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.365
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.655
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1], Result: [null, {"axi_bram_ctrl_0": {},
"axi_bram_ctrl_1": {},
"axi_bram_ctrl_2": {},
"axi_bram_ctrl_3": {},
"axi_bram_ctrl_4": {},
"axi_bram_ctrl_5": {},
"axi_bram_ctrl_6": {},
"axi_bram_ctrl_7": {},
"axi_bram_ctrl_8": {},
"axi_dma_4": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_dma_5": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_gpio_0": {"GPIO_DATA": {"description": "Channel-1 AXI GPIO Data register",
"address_offset": "0x0",
"access": "read-write",
"size": "2",
"fields": {"Channel-1 GPIO DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO_TRI": {"description": "Channel-1 AXI GPIO 3-State Control register",
"address_offset": "0x4",
"access": "read-write",
"size": "2",
"fields": {"Channel-1 GPIO TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO2_DATA": {"description": "Channel-2 AXI GPIO Data register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"fields": {"Channel-2 GPIO DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO2_TRI": {"description": "Channel-2 AXI GPIO 3-State Control register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"fields": {"Channel-2 GPIO TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GIER": {"description": "Global Interrupt Enable register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"fields": {"Global Interrupt Enable": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output
  0 - Disabled
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IP_IER": {"description": "IP Interrupt Enable register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"fields": {"Channel-1 Interrupt Enable": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Channel-2 Interrupt Enable": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 2 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IP_ISR": {"description": "IP Interrupt Status register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"fields": {"Channel-1 Interrupt Status": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 Interrupt Status
  0 - No Channel 1 input interrupt
  1 - Channel 1 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Channel-2 Interrupt Status": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 2 Interrupt Status
  0 - No Channel 2 input interrupt
  1 - Channel 2 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_iic_0": {"GIE": {"description": "Global Interrupt Enable Register",
"address_offset": "0x1c",
"access": "read-write",
"size": "32",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable
0 - All Interrupts disabled; no interrupt (even if unmasked in IER) possible from AXI IIC core
1 - Unmasked AXI IIC core interrupts are passed to processor
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x020",
"access": "read-write",
"size": "32",
"fields": {"int0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt0 - Arbitration Lost
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int1": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt1 - Transmit Error/Slave Transmit Complete
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int2": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt2 - Transmit FIFO Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int3": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt3 - Recieve FIFO FULL
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt4 - IIC Bus is Not Busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int5": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt5 - Addressed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int6": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt6 - Not Addessed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int7": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt7 - Transmit FIFO Half Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x028",
"access": "read-write",
"size": "32",
"fields": {"int0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt0 - Arbitration Lost
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int1": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt1 - Transmit Error/Slave Transmit Complete
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int2": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt2 - Transmit FIFO Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int3": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt3 - Recieve FIFO FULL
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt4 - IIC Bus is Not Busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int5": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt5 - Addressed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int6": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt6 - Not Addessed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int7": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt7 - Transmit FIFO Half Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SOFTR": {"description": "Soft Reset Register",
"address_offset": "0x040",
"access": "read-write",
"size": "32",
"fields": {"RKEY": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Reset Key - Firmware must write a value of 0xA to this field to
            cause a soft reset of the Interrupt registers of AXI IIC controller.
            Writing any other value results in an AXI transaction
            acknowledgement with SLVERR and no reset occurs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"CR": {"description": "Control Register",
"address_offset": "0x100",
"access": "read-write",
"size": "32",
"fields": {"EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "This bit must be set before any other CR bits have any effect
0 - resets and disables the AXI IIC controller but not the registers or FIFOs
1 - enables the AXI IIC controller
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "This bit must be set to flush the FIFO if either (a) arbitration is lost or (b) if a transmit error occurs
0 - transmit FIFO normal operation
1 - resets the transmit FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSMS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "When this bit is changed from 0 to 1, the
AXI IIC bus interface generates a START condition in master mode. When
this bit is cleared, a STOP condition is generated and the AXI IIC bus
interface switches to slave mode. When this bit is cleared by the
hardware, because arbitration for the bus has been lost, a STOP
condition is not generated
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "This bit selects the direction of master/slave transfers.
0 - selects an AXI IIC receive
1 - selects an AXI IIC transmit
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXAK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "This bit specifies the value driven onto
the sda line during acknowledge cycles for both master and slave recievers.
0 - acknowledge
1 - not-acknowledge
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RSTA": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit generates a repeated START 
condition on the bus if the AXI IIC bus interface is the current bus
master. Attempting a repeated START at the wrong time, if the bus is
owned by another master, results in a loss of arbitration. This bit is reset
when the repeated start occurs. This bit must be set prior to writing the
new address to the TX_FIFO or DTR
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"GC_EN": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Setting this bit High allows the AXI IIC to respond to a general call address.
0 - General Call Disabled
1 - General Call Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SR": {"description": "Status Register",
"address_offset": "0x104",
"access": "read-only",
"size": "32",
"fields": {"ABGC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set to 1 when another master has issued a general call and
the general call enable bit is set to 1, CR(6) = 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AAS": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "When the address on the IIC bus matches the slave address in the Address register (ADR), the IIC bus interface
is being addressed as a slave and switches to slave mode. If 10-bit addressing is selected this device only responds to a 10-bit
address or general call if enabled. This bit is cleared when a stop
condition is detected or a repeated start occurs.
0 - indicates not being addressed as a slave
1 - indicates being addressed as a slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BB": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "This bit indicates the status of the IIC bus. This bit is set
when a START condition is detected and cleared when a STOP
condition is detected.
0 - indicates the bus is idle
1 - indicates the bus is busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ARW": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "When the IIC bus interface has been addressed as a slave (AAS is set), 
this bit indicates the value of the read/write bit sent by the master.
This bit is only valid when a complete transfer has occurred and
no other transfers have been initiated.
0 - indicates master writing to slave
1 - indicates master reading from slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Full": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set High when the transmit FIFO is full.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Full": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set High when the receive FIFO is full.
This bit is set only when all 16 locations in the FIFO are full,
regardless of the compare value field of the RX_FIFO_PIRQ register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Empty": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "This is set High when the receive FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Empty": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "This is set High when the transmit FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TX_FIFO": {"description": "Transmit FIFO Register",
"address_offset": "0x108",
"access": "write-only",
"size": "32",
"fields": {"D7_D0": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "If the dynamic stop bit is used and the AXI IIC is a master receiver,
the value is the number of bytes to receive.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Start": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "The dynamic start bit can be used to send a start or repeated start sequence on the
IIC bus. A start sequence is generated if the MSMS = 0, a
repeated start sequence is generated if the MSMS = 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stop": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "The dynamic stop bit can be used to send an IIC stop
sequence on the IIC bus after the last byte has been transmitted or received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO": {"description": "Recieve FIFO Register",
"address_offset": "0x10C",
"access": "read-only",
"size": "32",
"fields": {"D7_D0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "IIC Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"ADR": {"description": "Slave Address Register",
"address_offset": "0x110",
"access": "read-write",
"size": "32",
"fields": {"Slave_Address": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "7",
"desc": "Address used by the IIC bus interface when in slave mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TX_FIFO_OCY": {"description": "Transmit FIFO Occupency Register",
"address_offset": "0x114",
"access": "read-only",
"size": "32",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 indicates that
10 locations are full in the FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO_OCY": {"description": "Recieve FIFO Occupency Register",
"address_offset": "0x118",
"access": "read-only",
"size": "32",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 indicates that
10 locations are full in the FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TEN_ADR": {"description": "Slave Ten Bit Address Register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"fields": {"MSB of Slave Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "3",
"desc": "Three MSBs of the 10-bit address used by the AXI IIC bus interface when in slave mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO_PIRQ": {"description": "Recieve FIFO Programmable Depth Interrupt Register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"fields": {"Compare Value": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 implies that when
10 locations in the receive FIFO are filled, the receive FIFO
interrupt is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPO": {"description": "General Purpose Output Register",
"address_offset": "0x124",
"access": "read-write",
"size": "1",
"fields": {"General Purpose Outputs": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The LSB (Bit[0]) is the first bit populated
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUSTA": {"description": "Timing Parameter TSUSTA Register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"fields": {"TSUSTA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Setup time for a repeated START condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUSTO": {"description": "Timing Parameter TSUSTO Register",
"address_offset": "0x12C",
"access": "read-write",
"size": "32",
"fields": {"TSUSTO": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Setup time for a repeated STOP condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THDSTA": {"description": "Timing Parameter THDSTA Register",
"address_offset": "0x130",
"access": "read-write",
"size": "32",
"fields": {"THDSTA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Hold time for a repeated START condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUDAT": {"description": "Timing Parameter TSUDAT Register",
"address_offset": "0x134",
"access": "read-write",
"size": "32",
"fields": {"TSUDAT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Data Setup time
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TBUF": {"description": "Timing Parameter TBUF Register",
"address_offset": "0x138",
"access": "read-write",
"size": "32",
"fields": {"TBUF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bus free time between a STOP and START condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THIGH": {"description": "Timing Parameter THIGH Register",
"address_offset": "0x138",
"access": "read-write",
"size": "32",
"fields": {"THIGH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "High Period of the scl clock.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TLOW": {"description": "Timing Parameter TLOW Register",
"address_offset": "0x140",
"access": "read-write",
"size": "32",
"fields": {"TLOW": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Low Period of scl clock.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THDDAT": {"description": "Timing Parameter THDDAT Register",
"address_offset": "0x144",
"access": "read-write",
"size": "32",
"fields": {"THDDAT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Data Hold time
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_quad_spi_0": {},
"axi_uart16550_0": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_1": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_10": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_11": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_2": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_3": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_4": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_5": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_6": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_7": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_8": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_9": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"ps7_afi_0": {},
"ps7_afi_1": {},
"ps7_afi_2": {},
"ps7_afi_3": {},
"ps7_coresight_comp_0": {},
"ps7_ddr_0": {},
"ps7_ddrc_0": {},
"ps7_dev_cfg_0": {},
"ps7_dma_ns": {},
"ps7_dma_s": {},
"ps7_ethernet_0": {},
"ps7_globaltimer_0": {},
"ps7_gpio_0": {},
"ps7_gpv_0": {},
"ps7_intc_dist_0": {},
"ps7_iop_bus_config_0": {},
"ps7_l2cachec_0": {},
"ps7_ocmc_0": {},
"ps7_pl310_0": {},
"ps7_pmu_0": {},
"ps7_qspi_0": {},
"ps7_qspi_linear_0": {},
"ps7_ram_0": {},
"ps7_ram_1": {},
"ps7_scuc_0": {},
"ps7_scugic_0": {},
"ps7_scutimer_0": {},
"ps7_scuwdt_0": {},
"ps7_slcr_0": {},
"ps7_uart_1": {},
"ps7_xadc_0": {},
}]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.662
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.685
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1], Result: [null, {"axi_dma_4_S_AXI_LITE": {"name": "axi_dma_4",
"base": "0x80400000",
"high": "0x8040FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_dma_5_S_AXI_LITE": {"name": "axi_dma_5",
"base": "0x80410000",
"high": "0x8041FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_gpio_0_S_AXI": {"name": "axi_gpio_0",
"base": "0x81200000",
"high": "0x8120FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_iic_0_S_AXI": {"name": "axi_iic_0",
"base": "0x81600000",
"high": "0x8160FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_0_AXI_LITE": {"name": "axi_quad_spi_0",
"base": "0x81E00000",
"high": "0x81E0FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_0_S_AXI": {"name": "axi_uart16550_0",
"base": "0x83C00000",
"high": "0x83C0FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_1_S_AXI": {"name": "axi_uart16550_1",
"base": "0x83C10000",
"high": "0x83C1FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_2_S_AXI": {"name": "axi_uart16550_2",
"base": "0x83C20000",
"high": "0x83C2FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_3_S_AXI": {"name": "axi_uart16550_3",
"base": "0x83C30000",
"high": "0x83C3FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_4_S_AXI": {"name": "axi_uart16550_4",
"base": "0x83C40000",
"high": "0x83C4FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_5_S_AXI": {"name": "axi_uart16550_5",
"base": "0x83C50000",
"high": "0x83C5FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_6_S_AXI": {"name": "axi_uart16550_6",
"base": "0x83C60000",
"high": "0x83C6FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_7_S_AXI": {"name": "axi_uart16550_7",
"base": "0x83C70000",
"high": "0x83C7FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_8_S_AXI": {"name": "axi_uart16550_8",
"base": "0x83C80000",
"high": "0x83C8FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_9_S_AXI": {"name": "axi_uart16550_9",
"base": "0x83C90000",
"high": "0x83C9FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_10_S_AXI": {"name": "axi_uart16550_10",
"base": "0x83CA0000",
"high": "0x83CAFFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_11_S_AXI": {"name": "axi_uart16550_11",
"base": "0x83CB0000",
"high": "0x83CBFFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_0": {"name": "ps7_afi_0",
"base": "0xF8008000",
"high": "0xF8008FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_1": {"name": "ps7_afi_1",
"base": "0xF8009000",
"high": "0xF8009FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_2": {"name": "ps7_afi_2",
"base": "0xF800A000",
"high": "0xF800AFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_3": {"name": "ps7_afi_3",
"base": "0xF800B000",
"high": "0xF800BFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_coresight_comp_0": {"name": "ps7_coresight_comp_0",
"base": "0xF8800000",
"high": "0xF88FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ddrc_0": {"name": "ps7_ddrc_0",
"base": "0xF8006000",
"high": "0xF8006FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dev_cfg_0": {"name": "ps7_dev_cfg_0",
"base": "0xF8007000",
"high": "0xF80070FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dma_ns": {"name": "ps7_dma_ns",
"base": "0xF8004000",
"high": "0xF8004FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dma_s": {"name": "ps7_dma_s",
"base": "0xF8003000",
"high": "0xF8003FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ethernet_0": {"name": "ps7_ethernet_0",
"base": "0xE000B000",
"high": "0xE000BFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_globaltimer_0": {"name": "ps7_globaltimer_0",
"base": "0xF8F00200",
"high": "0xF8F002FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_gpio_0": {"name": "ps7_gpio_0",
"base": "0xE000A000",
"high": "0xE000AFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_gpv_0": {"name": "ps7_gpv_0",
"base": "0xF8900000",
"high": "0xF89FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_intc_dist_0": {"name": "ps7_intc_dist_0",
"base": "0xF8F01000",
"high": "0xF8F01FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_iop_bus_config_0": {"name": "ps7_iop_bus_config_0",
"base": "0xE0200000",
"high": "0xE0200FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_l2cachec_0": {"name": "ps7_l2cachec_0",
"base": "0xF8F02000",
"high": "0xF8F02FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ocmc_0": {"name": "ps7_ocmc_0",
"base": "0xF800C000",
"high": "0xF800CFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_pl310_0": {"name": "ps7_pl310_0",
"base": "0xF8F02000",
"high": "0xF8F02FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_pmu_0": {"name": "ps7_pmu_0",
"base": "0xF8893000",
"high": "0xF8893FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_qspi_0": {"name": "ps7_qspi_0",
"base": "0xE000D000",
"high": "0xE000DFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_qspi_linear_0": {"name": "ps7_qspi_linear_0",
"base": "0xFC000000",
"high": "0xFCFFFFFF",
"size": "16777216",
"slaveintf": "",
"type": "FLASH",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scuc_0": {"name": "ps7_scuc_0",
"base": "0xF8F00000",
"high": "0xF8F000FC",
"size": "253",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scugic_0": {"name": "ps7_scugic_0",
"base": "0xF8F00100",
"high": "0xF8F001FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scutimer_0": {"name": "ps7_scutimer_0",
"base": "0xF8F00600",
"high": "0xF8F0061F",
"size": "32",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scuwdt_0": {"name": "ps7_scuwdt_0",
"base": "0xF8F00620",
"high": "0xF8F006FF",
"size": "224",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_slcr_0": {"name": "ps7_slcr_0",
"base": "0xF8000000",
"high": "0xF8000FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_uart_1": {"name": "ps7_uart_1",
"base": "0xE0001000",
"high": "0xE0001FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_xadc_0": {"name": "ps7_xadc_0",
"base": "0xF8007100",
"high": "0xF8007120",
"size": "33",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_0_S_AXI_Mem0": {"name": "axi_bram_ctrl_0",
"base": "0x40000000",
"high": "0x4000FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_1_S_AXI_Mem0": {"name": "axi_bram_ctrl_1",
"base": "0x42000000",
"high": "0x42001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_2_S_AXI_Mem0": {"name": "axi_bram_ctrl_2",
"base": "0x44000000",
"high": "0x44001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_3_S_AXI_Mem0": {"name": "axi_bram_ctrl_3",
"base": "0x46000000",
"high": "0x46001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_4_S_AXI_Mem0": {"name": "axi_bram_ctrl_4",
"base": "0x48000000",
"high": "0x48001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_5_S_AXI_Mem0": {"name": "axi_bram_ctrl_5",
"base": "0x4A000000",
"high": "0x4A001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_6_S_AXI_Mem0": {"name": "axi_bram_ctrl_6",
"base": "0x4C000000",
"high": "0x4C001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_7_S_AXI_Mem0": {"name": "axi_bram_ctrl_7",
"base": "0x4E000000",
"high": "0x4E001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_8_S_AXI_Mem0": {"name": "axi_bram_ctrl_8",
"base": "0x50000000",
"high": "0x50001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"ps7_ddr_0": {"name": "ps7_ddr_0",
"base": "0x00100000",
"high": "0x3FFFFFFF",
"size": "1072693248",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ram_0": {"name": "ps7_ram_0",
"base": "0x00000000",
"high": "0x0002FFFF",
"size": "196608",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ram_1": {"name": "ps7_ram_1",
"base": "0xFFFF0000",
"high": "0xFFFFFDFF",
"size": "65024",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
}]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.686
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_DEBUG_ENABLED], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.687
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_DEBUG_ENABLED], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.687
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_DEBUG_EVENT_COUNTERS], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.689
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_DEBUG_EVENT_COUNTERS], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.689
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_DEBUG_LATENCY_COUNTERS], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.690
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_DEBUG_LATENCY_COUNTERS], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.690
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_DEBUG_COUNTER_WIDTH], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.691
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_DEBUG_COUNTER_WIDTH], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.691
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_FREQ], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.692
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_FREQ], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.693
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_CPU_CLK_FREQ_HZ], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.694
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1 C_CPU_CLK_FREQ_HZ], Result: [null, 675000000]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.694
!MESSAGE XSCT Command: [::hsi::utils::get_hw_files_on_hw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf bit], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.696
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_files_on_hw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf bit], Result: [null, top.bit]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.696
!MESSAGE XSCT Command: [connect -url tcp:127.0.0.1:3121], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.700
!MESSAGE XSCT command with result: [connect -url tcp:127.0.0.1:3121], Result: [null, tcfchan#35]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.701
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.711
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.712
!MESSAGE XSCT Command: [version -server], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.713
!MESSAGE XSCT command with result: [version -server], Result: [null, 2018.2]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.713
!MESSAGE XSCT Command: [version], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.713
!MESSAGE XSCT command with result: [version], Result: [null, 2018.2]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.714
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.719
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.719
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.737
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.737
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.743
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.744
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.761
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.761
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.767
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.768
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.789
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.790
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.800
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.800
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.843
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.844
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.850
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.850
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.869
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.869
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.875
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.875
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.895
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.895
!MESSAGE XSCT Command: [jtag targets -set -filter {name =~ "Digilent JTAG-SMT2 210251A08870" && level == 0}], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.913
!MESSAGE XSCT command with result: [jtag targets -set -filter {name =~ "Digilent JTAG-SMT2 210251A08870" && level == 0}], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.913
!MESSAGE XSCT Command: [jtag frequency], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.915
!MESSAGE XSCT command with result: [jtag frequency], Result: [null, 15000000]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.916
!MESSAGE XSCT Command: [source D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/ps7_init.tcl], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.917
!MESSAGE XSCT command with result: [source D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/ps7_init.tcl], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.917
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.945
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:53.945
!MESSAGE XSCT Command: [rst -system], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:54.076
!MESSAGE XSCT command with result: [rst -system], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:54.077
!MESSAGE XSCT Command: [after 3000], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:57.080
!MESSAGE XSCT command with result: [after 3000], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:57.128
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:57.141
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:57.141
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:57.159
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:57.159
!MESSAGE XSCT Command: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==0} -index 1], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:57.179
!MESSAGE XSCT command with result: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==0} -index 1], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:45:57.179
!MESSAGE XSCT Command: [fpga -file D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/top.bit], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.045
!MESSAGE XSCT command with result: [fpga -file D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/top.bit], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.113
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.170
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.171
!MESSAGE XSCT Command: [loadhw -hw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -mem-ranges [list {0x40000000 0xbfffffff}]], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.266
!MESSAGE XSCT command with result: [loadhw -hw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -mem-ranges [list {0x40000000 0xbfffffff}]], Result: [null, top_8]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.266
!MESSAGE XSCT Command: [configparams force-mem-access 1], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.267
!MESSAGE XSCT command with result: [configparams force-mem-access 1], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.268
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.307
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.307
!MESSAGE XSCT Command: [ps7_init], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.674
!MESSAGE XSCT command with result: [ps7_init], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.674
!MESSAGE XSCT Command: [ps7_post_config], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.693
!MESSAGE XSCT command with result: [ps7_post_config], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.694
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.725
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.725
!MESSAGE XSCT Command: [dow D:/Users/xin.han/Desktop/ram_ls/IO10/IO10/Debug/IO10.elf], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.880
!MESSAGE XSCT command with result: [dow D:/Users/xin.han/Desktop/ram_ls/IO10/IO10/Debug/IO10.elf], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.880
!MESSAGE XSCT Command: [configparams force-mem-access 0], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:05.882
!MESSAGE XSCT command with result: [configparams force-mem-access 0], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:06.015
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:06.167
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:06.168
!MESSAGE XSCT Command: [con], Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:06.179
!MESSAGE XSCT command with result: [con], Result: [null, ]. Thread: Worker-67

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:55.939
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:55.942
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:55.942
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:55.946
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:55.946
!MESSAGE XSCT Command: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:46:55.947
!MESSAGE XSCT command with result: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:04.067
!MESSAGE XSCT Command: [disconnect tcfchan#35], Thread: Thread-2949

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:04.071
!MESSAGE XSCT command with result: [disconnect tcfchan#35], Result: [null, ]. Thread: Thread-2949

!ENTRY com.xilinx.sdk.utils 1 0 2021-03-02 14:47:05.069
!MESSAGE Updating toolusage

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.071
!MESSAGE XSCT Command: [connect -url tcp:127.0.0.1:3121], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.088
!MESSAGE XSCT command with result: [connect -url tcp:127.0.0.1:3121], Result: [null, tcfchan#36]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.090
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.117
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.117
!MESSAGE XSCT Command: [version -server], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.119
!MESSAGE XSCT command with result: [version -server], Result: [null, 2018.2]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.119
!MESSAGE XSCT Command: [version], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.120
!MESSAGE XSCT command with result: [version], Result: [null, 2018.2]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.120
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.128
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.128
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.160
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.161
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.169
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.169
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.189
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.189
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.195
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.195
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.212
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.212
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.218
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.218
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.236
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.236
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.242
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.242
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.259
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.259
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.265
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.265
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.281
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.281
!MESSAGE XSCT Command: [jtag targets -set -filter {name =~ "Digilent JTAG-SMT2 210251A08870" && level == 0}], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.298
!MESSAGE XSCT command with result: [jtag targets -set -filter {name =~ "Digilent JTAG-SMT2 210251A08870" && level == 0}], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.298
!MESSAGE XSCT Command: [jtag frequency], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.299
!MESSAGE XSCT command with result: [jtag frequency], Result: [null, 15000000]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.299
!MESSAGE XSCT Command: [source D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/ps7_init.tcl], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.301
!MESSAGE XSCT command with result: [source D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/ps7_init.tcl], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.302
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.331
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.331
!MESSAGE XSCT Command: [rst -system], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.447
!MESSAGE XSCT command with result: [rst -system], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:05.448
!MESSAGE XSCT Command: [after 3000], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:08.452
!MESSAGE XSCT command with result: [after 3000], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:08.496
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:08.507
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:08.507
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:08.524
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:08.524
!MESSAGE XSCT Command: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==0} -index 1], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:08.544
!MESSAGE XSCT command with result: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==0} -index 1], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:08.545
!MESSAGE XSCT Command: [fpga -file D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/top.bit], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.254
!MESSAGE XSCT command with result: [fpga -file D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/top.bit], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.304
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.354
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.355
!MESSAGE XSCT Command: [loadhw -hw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -mem-ranges [list {0x40000000 0xbfffffff}]], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.373
!MESSAGE XSCT command with result: [loadhw -hw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -mem-ranges [list {0x40000000 0xbfffffff}]], Result: [null, top_8]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.374
!MESSAGE XSCT Command: [configparams force-mem-access 1], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.375
!MESSAGE XSCT command with result: [configparams force-mem-access 1], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.376
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.423
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.423
!MESSAGE XSCT Command: [ps7_init], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.721
!MESSAGE XSCT command with result: [ps7_init], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.721
!MESSAGE XSCT Command: [ps7_post_config], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.731
!MESSAGE XSCT command with result: [ps7_post_config], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.731
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.752
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.752
!MESSAGE XSCT Command: [dow D:/Users/xin.han/Desktop/ram_ls/IO10/IO10/Debug/IO10.elf], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.876
!MESSAGE XSCT command with result: [dow D:/Users/xin.han/Desktop/ram_ls/IO10/IO10/Debug/IO10.elf], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.876
!MESSAGE XSCT Command: [configparams force-mem-access 0], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.879
!MESSAGE XSCT command with result: [configparams force-mem-access 0], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:16.966
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:17.053
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:17.054
!MESSAGE XSCT Command: [con], Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:47:17.059
!MESSAGE XSCT command with result: [con], Result: [null, ]. Thread: Worker-44

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:27.071
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:27.074
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:27.075
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:27.077
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:27.078
!MESSAGE XSCT Command: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:27.078
!MESSAGE XSCT command with result: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:32.710
!MESSAGE XSCT Command: [disconnect tcfchan#36], Thread: Thread-3010

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:32.714
!MESSAGE XSCT command with result: [disconnect tcfchan#36], Result: [null, ]. Thread: Thread-3010

!ENTRY com.xilinx.sdk.utils 1 0 2021-03-02 14:48:33.712
!MESSAGE Updating toolusage

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.713
!MESSAGE XSCT Command: [connect -url tcp:127.0.0.1:3121], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.721
!MESSAGE XSCT command with result: [connect -url tcp:127.0.0.1:3121], Result: [null, tcfchan#37]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.722
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.751
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.751
!MESSAGE XSCT Command: [version -server], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.752
!MESSAGE XSCT command with result: [version -server], Result: [null, 2018.2]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.753
!MESSAGE XSCT Command: [version], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.753
!MESSAGE XSCT command with result: [version], Result: [null, 2018.2]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.754
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.761
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.762
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.790
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.790
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.802
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.802
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.825
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.826
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.835
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.836
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.853
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.854
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.860
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.860
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.877
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.877
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.883
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.883
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.899
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.899
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.905
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.905
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.922
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.922
!MESSAGE XSCT Command: [jtag targets -set -filter {name =~ "Digilent JTAG-SMT2 210251A08870" && level == 0}], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.938
!MESSAGE XSCT command with result: [jtag targets -set -filter {name =~ "Digilent JTAG-SMT2 210251A08870" && level == 0}], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.939
!MESSAGE XSCT Command: [jtag frequency], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.940
!MESSAGE XSCT command with result: [jtag frequency], Result: [null, 15000000]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.941
!MESSAGE XSCT Command: [source D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/ps7_init.tcl], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.942
!MESSAGE XSCT command with result: [source D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/ps7_init.tcl], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.943
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.973
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:33.973
!MESSAGE XSCT Command: [rst -system], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:34.064
!MESSAGE XSCT command with result: [rst -system], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:34.064
!MESSAGE XSCT Command: [after 3000], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:37.067
!MESSAGE XSCT command with result: [after 3000], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:37.081
!MESSAGE XSCT Command: [jtag targets -filter {level == 0}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:37.098
!MESSAGE XSCT command with result: [jtag targets -filter {level == 0}], Result: [null,   1* Digilent JTAG-SMT2 210251A08870]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:37.098
!MESSAGE XSCT Command: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:37.114
!MESSAGE XSCT command with result: [jtag targets -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==1}], Result: [null,      2  arm_dap (idcode 4ba00477 irlen 4)
     3  xc7z045 (idcode 23731093 irlen 6 fpga)]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:37.115
!MESSAGE XSCT Command: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==0} -index 1], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:37.134
!MESSAGE XSCT command with result: [targets -set -filter {jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870" && level==0} -index 1], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:37.135
!MESSAGE XSCT Command: [fpga -file D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/top.bit], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:44.871
!MESSAGE XSCT command with result: [fpga -file D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/top.bit], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:44.936
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:44.963
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:44.963
!MESSAGE XSCT Command: [loadhw -hw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -mem-ranges [list {0x40000000 0xbfffffff}]], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:44.976
!MESSAGE XSCT command with result: [loadhw -hw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -mem-ranges [list {0x40000000 0xbfffffff}]], Result: [null, top_8]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:44.976
!MESSAGE XSCT Command: [configparams force-mem-access 1], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:44.977
!MESSAGE XSCT command with result: [configparams force-mem-access 1], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:44.977
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.011
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~"APU*" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.011
!MESSAGE XSCT Command: [ps7_init], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.275
!MESSAGE XSCT command with result: [ps7_init], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.275
!MESSAGE XSCT Command: [ps7_post_config], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.281
!MESSAGE XSCT command with result: [ps7_post_config], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.282
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.303
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.303
!MESSAGE XSCT Command: [dow D:/Users/xin.han/Desktop/ram_ls/IO10/IO10/Debug/IO10.elf], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.472
!MESSAGE XSCT command with result: [dow D:/Users/xin.han/Desktop/ram_ls/IO10/IO10/Debug/IO10.elf], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.472
!MESSAGE XSCT Command: [configparams force-mem-access 0], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.474
!MESSAGE XSCT command with result: [configparams force-mem-access 0], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.590
!MESSAGE XSCT Command: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.689
!MESSAGE XSCT command with result: [targets -set -nocase -filter {name =~ "ARM*#0" && jtag_cable_name =~ "Digilent JTAG-SMT2 210251A08870"} -index 0], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.690
!MESSAGE XSCT Command: [con], Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:48:45.697
!MESSAGE XSCT command with result: [con], Result: [null, ]. Thread: Worker-61

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:01.044
!MESSAGE XSCT Command: [::hsi::utils::openhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:01.051
!MESSAGE XSCT command with result: [::hsi::utils::openhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:01.052
!MESSAGE XSCT Command: [hsi get_hw_files -of_object [openhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ; hsi current_hw_design]], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:01.054
!MESSAGE XSCT command with result: [hsi get_hw_files -of_object [openhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ; hsi current_hw_design]], Result: [null, design_1.hwh design_1_bd.tcl design_1_system_ila_1_0.hwh design_1_system_ila_1_0_bd.tcl design_1_system_ila_0_1.hwh design_1_system_ila_0_1_bd.tcl ps7_init.c ps7_init.h ps7_init_gpl.c ps7_init_gpl.h ps7_init.html ps7_init.tcl top.bit top.mmi]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:01.096
!MESSAGE XSCT Command: [::hsi::utils::closehw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:01.197
!MESSAGE XSCT command with result: [::hsi::utils::closehw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:01.198
!MESSAGE XSCT Command: [::hsi::utils::openhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:04.827
!MESSAGE XSCT command with result: [::hsi::utils::openhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:04.829
!MESSAGE XSCT Command: [::hsi::utils::openhw C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:09.466
!MESSAGE XSCT command with result: [::hsi::utils::openhw C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:09.467
!MESSAGE XSCT Command: [::hsi::utils::get_all_periphs -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:09.494
!MESSAGE XSCT command with result: [::hsi::utils::get_all_periphs -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, {"aurora_8b10b_0": {"hier_name": "aurora_8b10b_0",
"type": "aurora_8b10b",
"version": "11.1",
"ip_type": "PERIPHERAL",
},
"aurora_8b10b_1": {"hier_name": "aurora_8b10b_1",
"type": "aurora_8b10b",
"version": "11.1",
"ip_type": "PERIPHERAL",
},
"aurora_8b10b_2": {"hier_name": "aurora_8b10b_2",
"type": "aurora_8b10b",
"version": "11.1",
"ip_type": "PERIPHERAL",
},
"aurora_8b10b_3": {"hier_name": "aurora_8b10b_3",
"type": "aurora_8b10b",
"version": "11.1",
"ip_type": "PERIPHERAL",
},
"axi_bram_ctrl_0": {"hier_name": "axi_bram_ctrl_0",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_1": {"hier_name": "axi_bram_ctrl_1",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_1_bram": {"hier_name": "axi_bram_ctrl_1_bram",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram1": {"hier_name": "axi_bram_ctrl_1_bram1",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram2": {"hier_name": "axi_bram_ctrl_1_bram2",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram3": {"hier_name": "axi_bram_ctrl_1_bram3",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram4": {"hier_name": "axi_bram_ctrl_1_bram4",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram5": {"hier_name": "axi_bram_ctrl_1_bram5",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram6": {"hier_name": "axi_bram_ctrl_1_bram6",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram7": {"hier_name": "axi_bram_ctrl_1_bram7",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_2": {"hier_name": "axi_bram_ctrl_2",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_3": {"hier_name": "axi_bram_ctrl_3",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_4": {"hier_name": "axi_bram_ctrl_4",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_5": {"hier_name": "axi_bram_ctrl_5",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_6": {"hier_name": "axi_bram_ctrl_6",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_7": {"hier_name": "axi_bram_ctrl_7",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_8": {"hier_name": "axi_bram_ctrl_8",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_dma_4": {"hier_name": "axi_dma_4",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_dma_5": {"hier_name": "axi_dma_5",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_gpio_0": {"hier_name": "axi_gpio_0",
"type": "axi_gpio",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_iic_0": {"hier_name": "axi_iic_0",
"type": "axi_iic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_interconnect_0": {"hier_name": "axi_interconnect_0",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"axi_quad_spi_0": {"hier_name": "axi_quad_spi_0",
"type": "axi_quad_spi",
"version": "3.2",
"ip_type": "MEMORY_CNTLR",
},
"axi_uart16550_0": {"hier_name": "axi_uart16550_0",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_1": {"hier_name": "axi_uart16550_1",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_10": {"hier_name": "axi_uart16550_10",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_11": {"hier_name": "axi_uart16550_11",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_2": {"hier_name": "axi_uart16550_2",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_3": {"hier_name": "axi_uart16550_3",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_4": {"hier_name": "axi_uart16550_4",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_5": {"hier_name": "axi_uart16550_5",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_6": {"hier_name": "axi_uart16550_6",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_7": {"hier_name": "axi_uart16550_7",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_8": {"hier_name": "axi_uart16550_8",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_9": {"hier_name": "axi_uart16550_9",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"clk_wiz_0": {"hier_name": "clk_wiz_0",
"type": "clk_wiz",
"version": "6.0",
"ip_type": "PERIPHERAL",
},
"proc_sys_reset_0": {"hier_name": "proc_sys_reset_0",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"proc_sys_reset_1": {"hier_name": "proc_sys_reset_1",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"processing_system7_0": {"hier_name": "processing_system7_0",
"type": "processing_system7",
"version": "5.5",
"ip_type": "",
},
"ps7_0_axi_periph": {"hier_name": "ps7_0_axi_periph",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"ps7_0_axi_periph2": {"hier_name": "ps7_0_axi_periph2",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"system_ila_0": {"hier_name": "system_ila_0",
"type": "system_ila",
"version": "1.1",
"ip_type": "MONITOR",
},
"system_ila_1": {"hier_name": "system_ila_1",
"type": "system_ila",
"version": "1.1",
"ip_type": "MONITOR",
},
"util_vector_logic_0": {"hier_name": "util_vector_logic_0",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"xlconcat_0": {"hier_name": "xlconcat_0",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"xlconcat_1": {"hier_name": "xlconcat_1",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"xlconstant_0": {"hier_name": "xlconstant_0",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"xlconstant_1": {"hier_name": "xlconstant_1",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"ps7_clockc_0": {"hier_name": "ps7_clockc_0",
"type": "ps7_clockc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_uart_1": {"hier_name": "ps7_uart_1",
"type": "ps7_uart",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_pl310_0": {"hier_name": "ps7_pl310_0",
"type": "ps7_pl310",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_pmu_0": {"hier_name": "ps7_pmu_0",
"type": "ps7_pmu",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_qspi_0": {"hier_name": "ps7_qspi_0",
"type": "ps7_qspi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_qspi_linear_0": {"hier_name": "ps7_qspi_linear_0",
"type": "ps7_qspi_linear",
"version": "1.00.a",
"ip_type": "MEMORY_CNTLR",
},
"ps7_axi_interconnect_0": {"hier_name": "ps7_axi_interconnect_0",
"type": "ps7_axi_interconnect",
"version": "1.00.a",
"ip_type": "BUS",
},
"ps7_cortexa9_0": {"hier_name": "ps7_cortexa9_0",
"type": "ps7_cortexa9",
"version": "5.2",
"ip_type": "PROCESSOR",
},
"ps7_cortexa9_1": {"hier_name": "ps7_cortexa9_1",
"type": "ps7_cortexa9",
"version": "5.2",
"ip_type": "PROCESSOR",
},
"ps7_ddr_0": {"hier_name": "ps7_ddr_0",
"type": "ps7_ddr",
"version": "1.00.a",
"ip_type": "MEMORY_CNTLR",
},
"ps7_ethernet_0": {"hier_name": "ps7_ethernet_0",
"type": "ps7_ethernet",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_gpio_0": {"hier_name": "ps7_gpio_0",
"type": "ps7_gpio",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_ddrc_0": {"hier_name": "ps7_ddrc_0",
"type": "ps7_ddrc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_dev_cfg_0": {"hier_name": "ps7_dev_cfg_0",
"type": "ps7_dev_cfg",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_xadc_0": {"hier_name": "ps7_xadc_0",
"type": "ps7_xadc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_ocmc_0": {"hier_name": "ps7_ocmc_0",
"type": "ps7_ocmc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_coresight_comp_0": {"hier_name": "ps7_coresight_comp_0",
"type": "ps7_coresight_comp",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_gpv_0": {"hier_name": "ps7_gpv_0",
"type": "ps7_gpv",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_scuc_0": {"hier_name": "ps7_scuc_0",
"type": "ps7_scuc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_globaltimer_0": {"hier_name": "ps7_globaltimer_0",
"type": "ps7_globaltimer",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_intc_dist_0": {"hier_name": "ps7_intc_dist_0",
"type": "ps7_intc_dist",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_l2cachec_0": {"hier_name": "ps7_l2cachec_0",
"type": "ps7_l2cachec",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_dma_s": {"hier_name": "ps7_dma_s",
"type": "ps7_dma",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_iop_bus_config_0": {"hier_name": "ps7_iop_bus_config_0",
"type": "ps7_iop_bus_config",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_ram_0": {"hier_name": "ps7_ram_0",
"type": "ps7_ram",
"version": "1.00.a",
"ip_type": "MEMORY_CNTLR",
},
"ps7_ram_1": {"hier_name": "ps7_ram_1",
"type": "ps7_ram",
"version": "1.00.a",
"ip_type": "MEMORY_CNTLR",
},
"ps7_scugic_0": {"hier_name": "ps7_scugic_0",
"type": "ps7_scugic",
"version": "1.00.a",
"ip_type": "INTERRUPT_CNTLR",
},
"ps7_scutimer_0": {"hier_name": "ps7_scutimer_0",
"type": "ps7_scutimer",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_scuwdt_0": {"hier_name": "ps7_scuwdt_0",
"type": "ps7_scuwdt",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_slcr_0": {"hier_name": "ps7_slcr_0",
"type": "ps7_slcr",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_dma_ns": {"hier_name": "ps7_dma_ns",
"type": "ps7_dma",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_afi_0": {"hier_name": "ps7_afi_0",
"type": "ps7_afi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_afi_1": {"hier_name": "ps7_afi_1",
"type": "ps7_afi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_afi_2": {"hier_name": "ps7_afi_2",
"type": "ps7_afi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_afi_3": {"hier_name": "ps7_afi_3",
"type": "ps7_afi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_m_axi_gp0": {"hier_name": "ps7_m_axi_gp0",
"type": "ps7_m_axi_gp",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_m_axi_gp1": {"hier_name": "ps7_m_axi_gp1",
"type": "ps7_m_axi_gp",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"system_ila_0_g_inst": {"hier_name": "system_ila_0/system_ila_0_g_inst",
"type": "gigantic_mux",
"version": "1.0",
"ip_type": "MONITOR",
},
"system_ila_0_ila_lib": {"hier_name": "system_ila_0/system_ila_0_ila_lib",
"type": "ila",
"version": "6.2",
"ip_type": "PERIPHERAL",
},
"system_ila_1_g_inst": {"hier_name": "system_ila_1/system_ila_1_g_inst",
"type": "gigantic_mux",
"version": "1.0",
"ip_type": "MONITOR",
},
"system_ila_1_ila_lib": {"hier_name": "system_ila_1/system_ila_1_ila_lib",
"type": "ila",
"version": "6.2",
"ip_type": "PERIPHERAL",
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:09.495
!MESSAGE XSCT Command: [::hsi::utils::get_all_periphs -json C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:09.522
!MESSAGE XSCT command with result: [::hsi::utils::get_all_periphs -json C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf], Result: [null, {"aurora_8b10b_0": {"hier_name": "aurora_8b10b_0",
"type": "aurora_8b10b",
"version": "11.1",
"ip_type": "PERIPHERAL",
},
"aurora_8b10b_1": {"hier_name": "aurora_8b10b_1",
"type": "aurora_8b10b",
"version": "11.1",
"ip_type": "PERIPHERAL",
},
"aurora_8b10b_2": {"hier_name": "aurora_8b10b_2",
"type": "aurora_8b10b",
"version": "11.1",
"ip_type": "PERIPHERAL",
},
"aurora_8b10b_3": {"hier_name": "aurora_8b10b_3",
"type": "aurora_8b10b",
"version": "11.1",
"ip_type": "PERIPHERAL",
},
"axi_bram_ctrl_0": {"hier_name": "axi_bram_ctrl_0",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_1": {"hier_name": "axi_bram_ctrl_1",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_1_bram": {"hier_name": "axi_bram_ctrl_1_bram",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram1": {"hier_name": "axi_bram_ctrl_1_bram1",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram2": {"hier_name": "axi_bram_ctrl_1_bram2",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram3": {"hier_name": "axi_bram_ctrl_1_bram3",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram4": {"hier_name": "axi_bram_ctrl_1_bram4",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram5": {"hier_name": "axi_bram_ctrl_1_bram5",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram6": {"hier_name": "axi_bram_ctrl_1_bram6",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_1_bram7": {"hier_name": "axi_bram_ctrl_1_bram7",
"type": "blk_mem_gen",
"version": "8.4",
"ip_type": "MEMORY",
},
"axi_bram_ctrl_2": {"hier_name": "axi_bram_ctrl_2",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_3": {"hier_name": "axi_bram_ctrl_3",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_4": {"hier_name": "axi_bram_ctrl_4",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_5": {"hier_name": "axi_bram_ctrl_5",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_6": {"hier_name": "axi_bram_ctrl_6",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_7": {"hier_name": "axi_bram_ctrl_7",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_bram_ctrl_8": {"hier_name": "axi_bram_ctrl_8",
"type": "axi_bram_ctrl",
"version": "4.0",
"ip_type": "MEMORY_CNTLR",
},
"axi_dma_4": {"hier_name": "axi_dma_4",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_dma_5": {"hier_name": "axi_dma_5",
"type": "axi_dma",
"version": "7.1",
"ip_type": "PERIPHERAL",
},
"axi_gpio_0": {"hier_name": "axi_gpio_0",
"type": "axi_gpio",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_iic_0": {"hier_name": "axi_iic_0",
"type": "axi_iic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_interconnect_0": {"hier_name": "axi_interconnect_0",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"axi_quad_spi_0": {"hier_name": "axi_quad_spi_0",
"type": "axi_quad_spi",
"version": "3.2",
"ip_type": "MEMORY_CNTLR",
},
"axi_uart16550_0": {"hier_name": "axi_uart16550_0",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_1": {"hier_name": "axi_uart16550_1",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_10": {"hier_name": "axi_uart16550_10",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_11": {"hier_name": "axi_uart16550_11",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_2": {"hier_name": "axi_uart16550_2",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_3": {"hier_name": "axi_uart16550_3",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_4": {"hier_name": "axi_uart16550_4",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_5": {"hier_name": "axi_uart16550_5",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_6": {"hier_name": "axi_uart16550_6",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_7": {"hier_name": "axi_uart16550_7",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_8": {"hier_name": "axi_uart16550_8",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"axi_uart16550_9": {"hier_name": "axi_uart16550_9",
"type": "axi_uart16550",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"clk_wiz_0": {"hier_name": "clk_wiz_0",
"type": "clk_wiz",
"version": "6.0",
"ip_type": "PERIPHERAL",
},
"proc_sys_reset_0": {"hier_name": "proc_sys_reset_0",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"proc_sys_reset_1": {"hier_name": "proc_sys_reset_1",
"type": "proc_sys_reset",
"version": "5.0",
"ip_type": "PERIPHERAL",
},
"processing_system7_0": {"hier_name": "processing_system7_0",
"type": "processing_system7",
"version": "5.5",
"ip_type": "",
},
"ps7_0_axi_periph": {"hier_name": "ps7_0_axi_periph",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"ps7_0_axi_periph2": {"hier_name": "ps7_0_axi_periph2",
"type": "axi_interconnect",
"version": "2.1",
"ip_type": "BUS",
},
"system_ila_0": {"hier_name": "system_ila_0",
"type": "system_ila",
"version": "1.1",
"ip_type": "MONITOR",
},
"system_ila_1": {"hier_name": "system_ila_1",
"type": "system_ila",
"version": "1.1",
"ip_type": "MONITOR",
},
"util_vector_logic_0": {"hier_name": "util_vector_logic_0",
"type": "util_vector_logic",
"version": "2.0",
"ip_type": "PERIPHERAL",
},
"xlconcat_0": {"hier_name": "xlconcat_0",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"xlconcat_1": {"hier_name": "xlconcat_1",
"type": "xlconcat",
"version": "2.1",
"ip_type": "PERIPHERAL",
},
"xlconstant_0": {"hier_name": "xlconstant_0",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"xlconstant_1": {"hier_name": "xlconstant_1",
"type": "xlconstant",
"version": "1.1",
"ip_type": "PERIPHERAL",
},
"ps7_clockc_0": {"hier_name": "ps7_clockc_0",
"type": "ps7_clockc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_uart_1": {"hier_name": "ps7_uart_1",
"type": "ps7_uart",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_pl310_0": {"hier_name": "ps7_pl310_0",
"type": "ps7_pl310",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_pmu_0": {"hier_name": "ps7_pmu_0",
"type": "ps7_pmu",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_qspi_0": {"hier_name": "ps7_qspi_0",
"type": "ps7_qspi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_qspi_linear_0": {"hier_name": "ps7_qspi_linear_0",
"type": "ps7_qspi_linear",
"version": "1.00.a",
"ip_type": "MEMORY_CNTLR",
},
"ps7_axi_interconnect_0": {"hier_name": "ps7_axi_interconnect_0",
"type": "ps7_axi_interconnect",
"version": "1.00.a",
"ip_type": "BUS",
},
"ps7_cortexa9_0": {"hier_name": "ps7_cortexa9_0",
"type": "ps7_cortexa9",
"version": "5.2",
"ip_type": "PROCESSOR",
},
"ps7_cortexa9_1": {"hier_name": "ps7_cortexa9_1",
"type": "ps7_cortexa9",
"version": "5.2",
"ip_type": "PROCESSOR",
},
"ps7_ddr_0": {"hier_name": "ps7_ddr_0",
"type": "ps7_ddr",
"version": "1.00.a",
"ip_type": "MEMORY_CNTLR",
},
"ps7_ethernet_0": {"hier_name": "ps7_ethernet_0",
"type": "ps7_ethernet",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_gpio_0": {"hier_name": "ps7_gpio_0",
"type": "ps7_gpio",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_ddrc_0": {"hier_name": "ps7_ddrc_0",
"type": "ps7_ddrc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_dev_cfg_0": {"hier_name": "ps7_dev_cfg_0",
"type": "ps7_dev_cfg",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_xadc_0": {"hier_name": "ps7_xadc_0",
"type": "ps7_xadc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_ocmc_0": {"hier_name": "ps7_ocmc_0",
"type": "ps7_ocmc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_coresight_comp_0": {"hier_name": "ps7_coresight_comp_0",
"type": "ps7_coresight_comp",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_gpv_0": {"hier_name": "ps7_gpv_0",
"type": "ps7_gpv",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_scuc_0": {"hier_name": "ps7_scuc_0",
"type": "ps7_scuc",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_globaltimer_0": {"hier_name": "ps7_globaltimer_0",
"type": "ps7_globaltimer",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_intc_dist_0": {"hier_name": "ps7_intc_dist_0",
"type": "ps7_intc_dist",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_l2cachec_0": {"hier_name": "ps7_l2cachec_0",
"type": "ps7_l2cachec",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_dma_s": {"hier_name": "ps7_dma_s",
"type": "ps7_dma",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_iop_bus_config_0": {"hier_name": "ps7_iop_bus_config_0",
"type": "ps7_iop_bus_config",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_ram_0": {"hier_name": "ps7_ram_0",
"type": "ps7_ram",
"version": "1.00.a",
"ip_type": "MEMORY_CNTLR",
},
"ps7_ram_1": {"hier_name": "ps7_ram_1",
"type": "ps7_ram",
"version": "1.00.a",
"ip_type": "MEMORY_CNTLR",
},
"ps7_scugic_0": {"hier_name": "ps7_scugic_0",
"type": "ps7_scugic",
"version": "1.00.a",
"ip_type": "INTERRUPT_CNTLR",
},
"ps7_scutimer_0": {"hier_name": "ps7_scutimer_0",
"type": "ps7_scutimer",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_scuwdt_0": {"hier_name": "ps7_scuwdt_0",
"type": "ps7_scuwdt",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_slcr_0": {"hier_name": "ps7_slcr_0",
"type": "ps7_slcr",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_dma_ns": {"hier_name": "ps7_dma_ns",
"type": "ps7_dma",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_afi_0": {"hier_name": "ps7_afi_0",
"type": "ps7_afi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_afi_1": {"hier_name": "ps7_afi_1",
"type": "ps7_afi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_afi_2": {"hier_name": "ps7_afi_2",
"type": "ps7_afi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_afi_3": {"hier_name": "ps7_afi_3",
"type": "ps7_afi",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_m_axi_gp0": {"hier_name": "ps7_m_axi_gp0",
"type": "ps7_m_axi_gp",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"ps7_m_axi_gp1": {"hier_name": "ps7_m_axi_gp1",
"type": "ps7_m_axi_gp",
"version": "1.00.a",
"ip_type": "PERIPHERAL",
},
"system_ila_0_g_inst": {"hier_name": "system_ila_0/system_ila_0_g_inst",
"type": "gigantic_mux",
"version": "1.0",
"ip_type": "MONITOR",
},
"system_ila_0_ila_lib": {"hier_name": "system_ila_0/system_ila_0_ila_lib",
"type": "ila",
"version": "6.2",
"ip_type": "PERIPHERAL",
},
"system_ila_1_g_inst": {"hier_name": "system_ila_1/system_ila_1_g_inst",
"type": "gigantic_mux",
"version": "1.0",
"ip_type": "MONITOR",
},
"system_ila_1_ila_lib": {"hier_name": "system_ila_1/system_ila_1_ila_lib",
"type": "ila",
"version": "6.2",
"ip_type": "PERIPHERAL",
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:10.286
!MESSAGE XSCT Command: [::hsi::utils::sync_sw_with_hw_changes -newhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -oldhw C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf -sw D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss -dir D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:12.249
!MESSAGE XSCT command with result: [::hsi::utils::sync_sw_with_hw_changes -newhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -oldhw C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf -sw D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss -dir D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:13.003
!MESSAGE XSCT Command: [::hsi::utils::sync_sw_with_hw_changes -newhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -oldhw C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf -sw D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss -dir D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:15.217
!MESSAGE XSCT command with result: [::hsi::utils::sync_sw_with_hw_changes -newhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -oldhw C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf -sw D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss -dir D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:15.967
!MESSAGE XSCT Command: [::hsi::utils::sync_sw_with_hw_changes -newhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -oldhw C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf -sw D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss -dir D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0], Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:17.325
!MESSAGE XSCT command with result: [::hsi::utils::sync_sw_with_hw_changes -newhw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf -oldhw C:/Users/xin.han/AppData/Local/Temp/system1427187091035994506.hdf -sw D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss -dir D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0], Result: [null, ]. Thread: ModalContext

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.513
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.516
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.517
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.520
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.520
!MESSAGE XSCT Command: [hsi::utils::get_supported_os -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.539
!MESSAGE XSCT command with result: [hsi::utils::get_supported_os -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, {"ps7_cortexa9_0": {"freertos10_xilinx_v1_1": {"name": "freertos10_xilinx",
"version": "1.1",
"desc": "FreeRTOS is a market leading open source RTOS",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_1",
},
"standalone_v6_7": {"name": "standalone",
"version": "6.7",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/lib/bsp/standalone_v6_7",
},
},
"ps7_cortexa9_1": {"freertos10_xilinx_v1_1": {"name": "freertos10_xilinx",
"version": "1.1",
"desc": "FreeRTOS is a market leading open source RTOS",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lfreertos,-lgcc,-lc,--end-group",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/ThirdParty/bsp/freertos10_xilinx_v1_1",
},
"standalone_v6_7": {"name": "standalone",
"version": "6.7",
"desc": "Standalone is a simple, low-level software layer. It provides access to basic processor features such as caches, interrupts and exceptions as well as the basic features of a hosted environment, such as standard input and output, profiling, abort and exit.",
"compilerflags": "",
"linkerflags": "-Wl,--start-group,-lxil,-lgcc,-lc,--end-group",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/lib/bsp/standalone_v6_7",
},
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.554
!MESSAGE XSCT Command: [::hsi::utils::get_connected_periphs D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.557
!MESSAGE XSCT command with result: [::hsi::utils::get_connected_periphs D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0], Result: [null, axi_bram_ctrl_0 axi_bram_ctrl_1 axi_bram_ctrl_2 axi_bram_ctrl_3 axi_bram_ctrl_4 axi_bram_ctrl_5 axi_bram_ctrl_6 axi_bram_ctrl_7 axi_bram_ctrl_8 axi_dma_4 axi_dma_5 axi_gpio_0 axi_iic_0 axi_quad_spi_0 axi_uart16550_0 axi_uart16550_1 axi_uart16550_10 axi_uart16550_11 axi_uart16550_2 axi_uart16550_3 axi_uart16550_4 axi_uart16550_5 axi_uart16550_6 axi_uart16550_7 axi_uart16550_8 axi_uart16550_9 ps7_afi_0 ps7_afi_1 ps7_afi_2 ps7_afi_3 ps7_coresight_comp_0 ps7_ddr_0 ps7_ddrc_0 ps7_dev_cfg_0 ps7_dma_ns ps7_dma_s ps7_ethernet_0 ps7_globaltimer_0 ps7_gpio_0 ps7_gpv_0 ps7_intc_dist_0 ps7_iop_bus_config_0 ps7_l2cachec_0 ps7_ocmc_0 ps7_pl310_0 ps7_pmu_0 ps7_qspi_0 ps7_qspi_linear_0 ps7_ram_0 ps7_ram_1 ps7_scuc_0 ps7_scugic_0 ps7_scutimer_0 ps7_scuwdt_0 ps7_slcr_0 ps7_uart_1 ps7_xadc_0]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.557
!MESSAGE XSCT Command: [::hsi::utils::get_drivers_for_sw -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.577
!MESSAGE XSCT command with result: [::hsi::utils::get_drivers_for_sw -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Result: [null, {"axi_bram_ctrl_0": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_1": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_2": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_3": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_4": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_5": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_6": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_7": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_8": {"name": "bram",
"ver": "4.2",
},
"axi_dma_4": {"name": "axidma",
"ver": "9.7",
},
"axi_dma_5": {"name": "axidma",
"ver": "9.7",
},
"axi_gpio_0": {"name": "gpio",
"ver": "4.3",
},
"axi_iic_0": {"name": "iic",
"ver": "3.4",
},
"axi_quad_spi_0": {"name": "spi",
"ver": "4.4",
},
"axi_uart16550_0": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_1": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_10": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_11": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_2": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_3": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_4": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_5": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_6": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_7": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_8": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_9": {"name": "uartns550",
"ver": "3.5",
},
"ps7_afi_0": {"name": "generic",
"ver": "2.0",
},
"ps7_afi_1": {"name": "generic",
"ver": "2.0",
},
"ps7_afi_2": {"name": "generic",
"ver": "2.0",
},
"ps7_afi_3": {"name": "generic",
"ver": "2.0",
},
"ps7_coresight_comp_0": {"name": "coresightps_dcc",
"ver": "1.4",
},
"ps7_ddr_0": {"name": "ddrps",
"ver": "1.0",
},
"ps7_ddrc_0": {"name": "generic",
"ver": "2.0",
},
"ps7_dev_cfg_0": {"name": "devcfg",
"ver": "3.5",
},
"ps7_dma_ns": {"name": "dmaps",
"ver": "2.3",
},
"ps7_dma_s": {"name": "dmaps",
"ver": "2.3",
},
"ps7_ethernet_0": {"name": "emacps",
"ver": "3.7",
},
"ps7_globaltimer_0": {"name": "generic",
"ver": "2.0",
},
"ps7_gpio_0": {"name": "gpiops",
"ver": "3.3",
},
"ps7_gpv_0": {"name": "generic",
"ver": "2.0",
},
"ps7_intc_dist_0": {"name": "generic",
"ver": "2.0",
},
"ps7_iop_bus_config_0": {"name": "generic",
"ver": "2.0",
},
"ps7_l2cachec_0": {"name": "generic",
"ver": "2.0",
},
"ps7_ocmc_0": {"name": "generic",
"ver": "2.0",
},
"ps7_pl310_0": {"name": "generic",
"ver": "2.0",
},
"ps7_pmu_0": {"name": "generic",
"ver": "2.0",
},
"ps7_qspi_0": {"name": "qspips",
"ver": "3.4",
},
"ps7_qspi_linear_0": {"name": "generic",
"ver": "2.0",
},
"ps7_ram_0": {"name": "generic",
"ver": "2.0",
},
"ps7_ram_1": {"name": "generic",
"ver": "2.0",
},
"ps7_scuc_0": {"name": "generic",
"ver": "2.0",
},
"ps7_scugic_0": {"name": "scugic",
"ver": "3.9",
},
"ps7_scutimer_0": {"name": "scutimer",
"ver": "2.1",
},
"ps7_scuwdt_0": {"name": "scuwdt",
"ver": "2.1",
},
"ps7_slcr_0": {"name": "generic",
"ver": "2.0",
},
"ps7_uart_1": {"name": "uartps",
"ver": "3.6",
},
"ps7_xadc_0": {"name": "xadcps",
"ver": "2.2",
},
"ps7_cortexa9_0": {"name": "cpu_cortexa9",
"ver": "2.6",
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.578
!MESSAGE XSCT Command: [hsi::utils::get_drivers_for_hw -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:18.898
!MESSAGE XSCT command with result: [hsi::utils::get_drivers_for_hw -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, {"aurora_8b10b_0": {"version": "11.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"aurora_8b10b_1": {"version": "11.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"aurora_8b10b_2": {"version": "11.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"aurora_8b10b_3": {"version": "11.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_0": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_bram_ctrl_1": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_bram_ctrl_1_bram": {"version": "8.4",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_1_bram1": {"version": "8.4",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_1_bram2": {"version": "8.4",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_1_bram3": {"version": "8.4",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_1_bram4": {"version": "8.4",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_1_bram5": {"version": "8.4",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_1_bram6": {"version": "8.4",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_1_bram7": {"version": "8.4",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_bram_ctrl_2": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_bram_ctrl_3": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_bram_ctrl_4": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_bram_ctrl_5": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_bram_ctrl_6": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_bram_ctrl_7": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_bram_ctrl_8": {"version": "4.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"bram_v4_2": {"name": "bram",
"version": "4.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/bram_v4_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_dma_4": {"version": "7.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"axidma_v9_7": {"name": "axidma",
"version": "9.7",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/axidma_v9_7",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_dma_5": {"version": "7.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"axidma_v9_7": {"name": "axidma",
"version": "9.7",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/axidma_v9_7",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_gpio_0": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"gpio_v4_3": {"name": "gpio",
"version": "4.3",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/gpio_v4_3",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_iic_0": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"iic_v3_4": {"name": "iic",
"version": "3.4",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/iic_v3_4",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_interconnect_0": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"axi_quad_spi_0": {"version": "3.2",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"spi_v4_4": {"name": "spi",
"version": "4.4",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/spi_v4_4",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_0": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_1": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_10": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_11": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_2": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_3": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_4": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_5": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_6": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_7": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_8": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"axi_uart16550_9": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartns550_v3_5": {"name": "uartns550",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartns550_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"clk_wiz_0": {"version": "6.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"clk_wiz_v1_2": {"name": "clk_wiz",
"version": "1.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/clk_wiz_v1_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"proc_sys_reset_0": {"version": "5.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"proc_sys_reset_1": {"version": "5.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"processing_system7_0": {"version": "5.5",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_0_axi_periph": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_0_axi_periph2": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"system_ila_0": {"version": "1.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"system_ila_1": {"version": "1.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"util_vector_logic_0": {"version": "2.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"xlconcat_0": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"xlconcat_1": {"version": "2.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"xlconstant_0": {"version": "1.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"xlconstant_1": {"version": "1.1",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_clockc_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_uart_1": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"uartps_v3_6": {"name": "uartps",
"version": "3.6",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/uartps_v3_6",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_pl310_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_pmu_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_qspi_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"qspips_v3_4": {"name": "qspips",
"version": "3.4",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/qspips_v3_4",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_qspi_linear_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_axi_interconnect_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_cortexa9_0": {"version": "5.2",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"cpu_cortexa9_v2_6": {"name": "cpu_cortexa9",
"version": "2.6",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/cpu_cortexa9_v2_6",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_cortexa9_1": {"version": "5.2",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"cpu_cortexa9_v2_6": {"name": "cpu_cortexa9",
"version": "2.6",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/cpu_cortexa9_v2_6",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_ddr_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"ddrps_v1_0": {"name": "ddrps",
"version": "1.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/ddrps_v1_0",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_ethernet_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"emacps_v3_7": {"name": "emacps",
"version": "3.7",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/emacps_v3_7",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_gpio_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"gpiops_v3_3": {"name": "gpiops",
"version": "3.3",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/gpiops_v3_3",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_ddrc_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_dev_cfg_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"devcfg_v3_5": {"name": "devcfg",
"version": "3.5",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/devcfg_v3_5",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_xadc_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"xadcps_v2_2": {"name": "xadcps",
"version": "2.2",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/xadcps_v2_2",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_ocmc_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_coresight_comp_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"coresightps_dcc_v1_4": {"name": "coresightps_dcc",
"version": "1.4",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/coresightps_dcc_v1_4",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_gpv_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_scuc_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_globaltimer_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_intc_dist_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_l2cachec_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_dma_s": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"dmaps_v2_3": {"name": "dmaps",
"version": "2.3",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/dmaps_v2_3",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_iop_bus_config_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_ram_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_ram_1": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_scugic_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"scugic_v3_9": {"name": "scugic",
"version": "3.9",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/scugic_v3_9",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_scutimer_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"scutimer_v2_1": {"name": "scutimer",
"version": "2.1",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/scutimer_v2_1",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_scuwdt_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"scuwdt_v2_1": {"name": "scuwdt",
"version": "2.1",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/scuwdt_v2_1",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_slcr_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_dma_ns": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
"dmaps_v2_3": {"name": "dmaps",
"version": "2.3",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/dmaps_v2_3",
"compilerflags": "",
"linkerflags": "",
},
},
},
"ps7_afi_0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_afi_1": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_afi_2": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_afi_3": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_m_axi_gp0": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"ps7_m_axi_gp1": {"version": "1.00.a",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"system_ila_0_g_inst": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"system_ila_0_ila_lib": {"version": "6.2",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"system_ila_1_g_inst": {"version": "1.0",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
"system_ila_1_ila_lib": {"version": "6.2",
"driver_info": {"generic": {"name": "generic",
"version": "2.0",
"repo": "D:/xilinx/SDK/2018.2/data/embeddedsw/XilinxProcessorIPLib/drivers/generic_v2_0",
},
},
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.057
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.060
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.060
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.062
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.066
!MESSAGE XSCT Command: [::hsi::utils::get_libs_from_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.068
!MESSAGE XSCT command with result: [::hsi::utils::get_libs_from_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.070
!MESSAGE XSCT Command: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.071
!MESSAGE XSCT command with result: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.896
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.898
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.898
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.900
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.910
!MESSAGE XSCT Command: [::hsi::utils::get_drivers_for_sw -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:19.921
!MESSAGE XSCT command with result: [::hsi::utils::get_drivers_for_sw -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Result: [null, {"axi_bram_ctrl_0": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_1": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_2": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_3": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_4": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_5": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_6": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_7": {"name": "bram",
"ver": "4.2",
},
"axi_bram_ctrl_8": {"name": "bram",
"ver": "4.2",
},
"axi_dma_4": {"name": "axidma",
"ver": "9.7",
},
"axi_dma_5": {"name": "axidma",
"ver": "9.7",
},
"axi_gpio_0": {"name": "gpio",
"ver": "4.3",
},
"axi_iic_0": {"name": "iic",
"ver": "3.4",
},
"axi_quad_spi_0": {"name": "spi",
"ver": "4.4",
},
"axi_uart16550_0": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_1": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_10": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_11": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_2": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_3": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_4": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_5": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_6": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_7": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_8": {"name": "uartns550",
"ver": "3.5",
},
"axi_uart16550_9": {"name": "uartns550",
"ver": "3.5",
},
"ps7_afi_0": {"name": "generic",
"ver": "2.0",
},
"ps7_afi_1": {"name": "generic",
"ver": "2.0",
},
"ps7_afi_2": {"name": "generic",
"ver": "2.0",
},
"ps7_afi_3": {"name": "generic",
"ver": "2.0",
},
"ps7_coresight_comp_0": {"name": "coresightps_dcc",
"ver": "1.4",
},
"ps7_ddr_0": {"name": "ddrps",
"ver": "1.0",
},
"ps7_ddrc_0": {"name": "generic",
"ver": "2.0",
},
"ps7_dev_cfg_0": {"name": "devcfg",
"ver": "3.5",
},
"ps7_dma_ns": {"name": "dmaps",
"ver": "2.3",
},
"ps7_dma_s": {"name": "dmaps",
"ver": "2.3",
},
"ps7_ethernet_0": {"name": "emacps",
"ver": "3.7",
},
"ps7_globaltimer_0": {"name": "generic",
"ver": "2.0",
},
"ps7_gpio_0": {"name": "gpiops",
"ver": "3.3",
},
"ps7_gpv_0": {"name": "generic",
"ver": "2.0",
},
"ps7_intc_dist_0": {"name": "generic",
"ver": "2.0",
},
"ps7_iop_bus_config_0": {"name": "generic",
"ver": "2.0",
},
"ps7_l2cachec_0": {"name": "generic",
"ver": "2.0",
},
"ps7_ocmc_0": {"name": "generic",
"ver": "2.0",
},
"ps7_pl310_0": {"name": "generic",
"ver": "2.0",
},
"ps7_pmu_0": {"name": "generic",
"ver": "2.0",
},
"ps7_qspi_0": {"name": "qspips",
"ver": "3.4",
},
"ps7_qspi_linear_0": {"name": "generic",
"ver": "2.0",
},
"ps7_ram_0": {"name": "generic",
"ver": "2.0",
},
"ps7_ram_1": {"name": "generic",
"ver": "2.0",
},
"ps7_scuc_0": {"name": "generic",
"ver": "2.0",
},
"ps7_scugic_0": {"name": "scugic",
"ver": "3.9",
},
"ps7_scutimer_0": {"name": "scutimer",
"ver": "2.1",
},
"ps7_scuwdt_0": {"name": "scuwdt",
"ver": "2.1",
},
"ps7_slcr_0": {"name": "generic",
"ver": "2.0",
},
"ps7_uart_1": {"name": "uartps",
"ver": "3.6",
},
"ps7_xadc_0": {"name": "xadcps",
"ver": "2.2",
},
"ps7_cortexa9_0": {"name": "cpu_cortexa9",
"ver": "2.6",
},
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:20.052
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:20.054
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:20.054
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:20.057
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:20.063
!MESSAGE XSCT Command: [::hsi::utils::get_libs_from_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:20.065
!MESSAGE XSCT command with result: [::hsi::utils::get_libs_from_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:20.067
!MESSAGE XSCT Command: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:20.068
!MESSAGE XSCT command with result: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Result: [null, ]. Thread: main

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-03-02 14:52:21.211
!MESSAGE Error setting focus to : org.eclipse.e4.ui.model.application.ui.basic.impl.PartImpl xparameters.h
!STACK 0
org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4533)
	at org.eclipse.swt.SWT.error(SWT.java:4448)
	at org.eclipse.swt.SWT.error(SWT.java:4419)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:482)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:354)
	at org.eclipse.swt.widgets.Control.setFocus(Control.java:3437)
	at org.eclipse.swt.widgets.Composite.setFocus(Composite.java:1119)
	at org.eclipse.swt.widgets.Composite.setFocus(Composite.java:1119)
	at org.eclipse.ui.texteditor.StatusTextEditor.setFocus(StatusTextEditor.java:118)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.delegateSetFocus(CompatibilityPart.java:203)
	at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:282)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:288)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:259)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:107)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.focusGui(PartRenderingEngine.java:779)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer$2.setFocus(ContributedPartRenderer.java:102)
	at org.eclipse.swt.custom.CTabItem.setFocus(CTabItem.java:332)
	at org.eclipse.swt.custom.CTabFolder.setFocus(CTabFolder.java:2611)
	at org.eclipse.swt.widgets.Control.fixFocus(Control.java:1069)
	at org.eclipse.swt.widgets.Control.setVisible(Control.java:3964)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3155)
	at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3112)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1329)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer$1.handleEvent(LazyStackRenderer.java:72)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler$1.run(UIEventHandler.java:40)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:233)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:145)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4813)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application$1.syncExec(E4Application.java:211)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:36)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:201)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:197)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:148)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:135)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:78)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:39)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:94)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:60)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:374)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:173)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.showElementInWindow(ModelServiceImpl.java:617)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.bringToTop(ModelServiceImpl.java:581)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.delegateBringToTop(PartServiceImpl.java:770)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.showPart(PartServiceImpl.java:1211)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:3261)
	at org.eclipse.ui.internal.WorkbenchPage.access$25(WorkbenchPage.java:3176)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:3158)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3153)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3117)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:3098)
	at com.xilinx.sdk.hw.sync.internal.HwChangeWorkspaceSynchronizer.reopenMssFiles(HwChangeWorkspaceSynchronizer.java:147)
	at com.xilinx.sdk.hw.sync.internal.HwChangeWorkspaceSynchronizer.synchronize(HwChangeWorkspaceSynchronizer.java:111)
	at com.xilinx.sdk.hw.sync.HwSpecChangeUtil.performChange(HwSpecChangeUtil.java:136)
	at com.xilinx.sdk.hw.sync.HwPlatformMonitor.doMonitorTask(HwPlatformMonitor.java:78)
	at com.xilinx.sdk.hw.sync.HwPlatformMonitor.access$0(HwPlatformMonitor.java:41)
	at com.xilinx.sdk.hw.sync.HwPlatformMonitor$1.run(HwPlatformMonitor.java:33)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:182)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4203)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3819)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1121)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1022)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:150)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:687)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:604)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:138)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:673)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:610)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1519)

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:26.896
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:26.902
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:26.902
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:26.906
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:26.913
!MESSAGE XSCT Command: [::hsi::utils::get_libs_from_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:26.917
!MESSAGE XSCT command with result: [::hsi::utils::get_libs_from_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:27.051
!MESSAGE XSCT Command: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:27.052
!MESSAGE XSCT command with result: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/UART_bsp/system.mss], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:28.729
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:28.734
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:28.735
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:28.738
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:28.746
!MESSAGE XSCT Command: [::hsi::utils::get_libs_from_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:28.748
!MESSAGE XSCT command with result: [::hsi::utils::get_libs_from_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Result: [null, ]. Thread: main

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:28.774
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:28.864
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:28.871
!MESSAGE XSCT Command: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Thread: main

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:28.872
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:52:28.873
!MESSAGE XSCT command with result: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/standalone_bsp_0/system.mss], Result: [null, ]. Thread: main

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:28.996
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.002
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.100
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.106
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.195
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.202
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.283
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.287
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.381
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.387
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.476
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.482
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.571
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.576
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.661
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.665
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.744
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.748
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.826
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.830
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.913
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:29.919
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.021
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.028
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.142
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.155
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.281
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.287
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.392
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.398
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.496
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.502
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.810
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.817
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.940
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:30.947
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:31.052
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:31.058
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:31.154
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:31.159
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:31.219
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:32.829
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:32.899
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:32.907
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:32.987
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:34.504
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:34.509
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:34.572
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:34.862
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:34.868
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:34.945
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:34.981
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:34.989
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:35.066
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:35.143
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:35.148
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:35.217
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:36.913
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:36.919
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:36.986
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:38.678
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:38.683
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:38.737
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:41.047
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:41.052
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:41.113
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:42.269
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:42.275
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:42.347
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:44.275
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:44.279
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:44.339
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:47.364
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:47.368
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:47.427
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:49.133
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:49.138
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:49.205
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:50.863
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:50.875
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:50.932
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:51.791
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:51.796
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:51.864
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:52.730
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:52.735
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:52.796
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:54.381
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:54.389
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:52:54.513
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:01.838
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:01.842
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:01.895
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.460
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.460
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.461
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.461
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.462
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.462
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.462
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.462
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.463
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.463
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.463
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.463
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.464
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.464
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.464
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.464
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.464
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.465
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.465
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.465
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.465
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.466
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.466
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.466
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.466
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.467
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.467
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.467
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.468
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.468
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.468
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.468
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.469
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.469
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.469
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.470
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.470
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.470
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.470
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.471
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.471
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.471
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.471
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.472
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.472
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.472
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.472
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.473
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.473
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.473
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.473
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.474
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.474
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.474
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.474
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.474
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.475
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.475
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.475
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.475
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.476
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.476
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.476
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.477
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.477
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.477
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.477
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.478
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.478
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.478
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.479
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.479
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.479
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.479
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.480
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.480
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.480
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.481
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.481
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.481
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.481
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.482
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.482
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:02.482
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:04.116
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:04.122
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:04.191
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:06.329
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:06.334
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:06.416
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:08.228
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:08.239
!MESSAGE Error
!STACK 0
java.lang.NullPointerException
	at org.eclipse.cdt.internal.core.ConsoleOutputSniffer.closeConsoleOutputStream(ConsoleOutputSniffer.java:160)
	at org.eclipse.cdt.internal.core.ConsoleOutputSniffer$ConsoleOutputStream.close(ConsoleOutputSniffer.java:68)
	at org.eclipse.cdt.internal.core.ProcessClosure$ReaderThread.close(ProcessClosure.java:98)
	at org.eclipse.cdt.internal.core.ProcessClosure.isAlive(ProcessClosure.java:193)
	at org.eclipse.cdt.core.CommandLauncher.waitAndRead(CommandLauncher.java:259)
	at org.eclipse.cdt.internal.core.BuildRunnerHelper.build(BuildRunnerHelper.java:273)
	at org.eclipse.cdt.make.core.MakeBuilder.invokeMake(MakeBuilder.java:219)
	at org.eclipse.cdt.make.core.MakeBuilder.build(MakeBuilder.java:108)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:735)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:206)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:246)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:301)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:304)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:360)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:383)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:144)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:235)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.435
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.528
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.534
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.642
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.649
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.743
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.750
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.855
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.862
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.971
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:09.980
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.106
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.113
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.222
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.228
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.330
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.336
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.458
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.464
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.569
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.575
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.673
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.678
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.765
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.770
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.857
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.861
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.941
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:10.946
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.028
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.032
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.112
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.118
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.215
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.222
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.429
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.433
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.516
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.521
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.624
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.636
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.760
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.768
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:11.845
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:13.465
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:13.526
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:13.531
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:13.587
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:14.976
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:14.981
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.048
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.373
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.380
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.456
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.492
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.498
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.568
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.639
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.644
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:15.719
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:17.249
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:17.256
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:17.324
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:18.916
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:18.924
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:18.998
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:21.372
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:21.380
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:21.447
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:22.776
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:22.781
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:22.841
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:24.614
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:24.621
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:24.684
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:27.740
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:27.744
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:27.793
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:29.803
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:29.809
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:29.877
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:31.351
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:31.357
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:31.418
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:32.359
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:32.365
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:32.422
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:33.199
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:33.205
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:33.265
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:34.930
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:34.935
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:35.076
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:42.798
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:42.807
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:42.886
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.537
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.537
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.538
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.538
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.539
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.539
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.539
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.540
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.540
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.540
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.540
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.541
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.541
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.541
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.542
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.542
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.542
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.542
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.543
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.543
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.543
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.544
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.544
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.544
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.544
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.545
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.545
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.545
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.546
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.546
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.546
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.546
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.547
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.547
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.547
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.548
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.548
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.548
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.548
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.549
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.549
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.549
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.550
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.550
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.550
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.550
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.551
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.551
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.551
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.552
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.552
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.552
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.552
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.553
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.553
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.553
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.554
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.554
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.554
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.554
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.555
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.555
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.555
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.556
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.556
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.556
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.556
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.557
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.558
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.558
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.559
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.559
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.559
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.559
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.560
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.560
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.561
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.562
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.562
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.562
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.562
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.563
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.563
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:43.564
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:44.973
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:44.981
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:45.075
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:46.998
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:47.002
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:47.054
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.212
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.253
!MESSAGE Error
!STACK 0
java.lang.NullPointerException
	at org.eclipse.cdt.internal.core.ConsoleOutputSniffer.closeConsoleOutputStream(ConsoleOutputSniffer.java:160)
	at org.eclipse.cdt.internal.core.ConsoleOutputSniffer$ConsoleOutputStream.close(ConsoleOutputSniffer.java:68)
	at org.eclipse.cdt.internal.core.ProcessClosure$ReaderThread.close(ProcessClosure.java:98)
	at org.eclipse.cdt.internal.core.ProcessClosure.isAlive(ProcessClosure.java:193)
	at org.eclipse.cdt.core.CommandLauncher.waitAndRead(CommandLauncher.java:259)
	at org.eclipse.cdt.internal.core.BuildRunnerHelper.build(BuildRunnerHelper.java:273)
	at org.eclipse.cdt.make.core.MakeBuilder.invokeMake(MakeBuilder.java:219)
	at org.eclipse.cdt.make.core.MakeBuilder.build(MakeBuilder.java:108)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:735)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:206)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:246)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:301)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:304)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:360)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:383)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:144)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:235)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.362
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.446
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.451
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.543
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.548
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.634
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.640
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.717
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.722
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.802
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.808
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.899
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.904
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.990
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:49.994
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.077
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.082
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.173
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.180
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.307
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.320
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.443
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.450
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.561
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.567
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.663
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.668
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.760
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.768
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.883
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:50.898
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.064
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.093
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.293
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.303
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.690
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.699
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.838
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.845
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.977
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:51.984
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:52.093
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:52.100
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:52.172
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:53.945
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:54.053
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:54.061
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:54.141
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:55.735
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:55.740
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:55.794
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.013
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.018
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.072
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.097
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.101
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.156
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.213
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.218
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:56.280
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:57.690
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:57.695
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:57.760
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:59.323
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:59.328
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:53:59.388
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:01.872
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:01.876
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:01.932
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:03.044
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:03.049
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:03.109
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:04.946
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:04.953
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:05.015
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:08.305
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:08.310
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:08.382
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:10.520
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:10.526
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:10.582
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:12.152
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:12.160
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:12.233
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:13.168
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:13.173
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:13.242
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:14.002
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:14.010
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:14.084
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:15.787
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:15.793
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:15.912
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.227
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.232
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.290
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.843
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.843
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.849
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.849
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.851
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.851
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.851
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.852
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.852
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.853
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.853
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.854
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.854
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.855
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.855
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.856
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.856
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.856
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.857
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.857
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.857
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.858
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.858
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.858
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.859
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.859
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.860
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.860
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.860
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.861
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.861
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.861
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.862
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.862
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.862
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.863
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.864
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.864
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.864
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.865
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.865
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.866
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.867
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.867
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.867
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.868
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.868
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.869
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.869
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.870
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.870
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.871
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.871
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.872
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.872
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.873
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.874
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.874
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.874
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.875
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.875
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.876
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.876
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.877
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.878
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.878
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.878
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.879
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.880
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.880
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.881
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.882
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.882
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.882
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.883
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.884
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.884
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.885
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.885
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.886
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.886
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.887
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.887
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:23.887
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:25.360
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:25.366
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:25.425
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:27.417
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:27.422
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:27.480
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:29.206
!MESSAGE Error
!STACK 0
java.lang.NullPointerException

!ENTRY org.eclipse.cdt.core 4 0 2021-03-02 14:54:29.229
!MESSAGE Error
!STACK 0
java.lang.NullPointerException
	at org.eclipse.cdt.internal.core.ConsoleOutputSniffer.closeConsoleOutputStream(ConsoleOutputSniffer.java:160)
	at org.eclipse.cdt.internal.core.ConsoleOutputSniffer$ConsoleOutputStream.close(ConsoleOutputSniffer.java:68)
	at org.eclipse.cdt.internal.core.ProcessClosure$ReaderThread.close(ProcessClosure.java:98)
	at org.eclipse.cdt.internal.core.ProcessClosure.isAlive(ProcessClosure.java:193)
	at org.eclipse.cdt.core.CommandLauncher.waitAndRead(CommandLauncher.java:259)
	at org.eclipse.cdt.internal.core.BuildRunnerHelper.build(BuildRunnerHelper.java:273)
	at org.eclipse.cdt.make.core.MakeBuilder.invokeMake(MakeBuilder.java:219)
	at org.eclipse.cdt.make.core.MakeBuilder.build(MakeBuilder.java:108)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:735)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:206)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:246)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:301)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:304)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:360)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:383)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:144)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:235)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:35.956
!MESSAGE XSCT Command: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss ], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:35.958
!MESSAGE XSCT command with result: [ ::hsi::utils::set_current_hw_sw D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss ], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:35.959
!MESSAGE XSCT Command: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:35.961
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_sw_details -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Result: [null, {"procname": "ps7_cortexa9_0",
"osname": "standalone",
"osver": "6.7",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:35.961
!MESSAGE XSCT Command: [::hsi::utils::get_design_properties -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:35.963
!MESSAGE XSCT command with result: [::hsi::utils::get_design_properties -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, {"device": "7z045",
"family": "zynq",
"timestamp": "Mon Mar  1 15:27:36 2021",
"vivado_version": "2018.2",
"part": "xc7z045ffg900-2",
}]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:35.964
!MESSAGE XSCT Command: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:35.965
!MESSAGE XSCT command with result: [::hsi::utils::closesw D:/Users/xin.han/Desktop/ram_ls/IO10/IO10_bsp/system.mss], Result: [null, ]. Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:52.333
!MESSAGE XSCT Command: [disconnect tcfchan#37], Thread: Thread-3124

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:52.342
!MESSAGE XSCT command with result: [disconnect tcfchan#37], Result: [null, ]. Thread: Thread-3124

!ENTRY com.xilinx.sdk.utils 1 0 2021-03-02 14:54:53.365
!MESSAGE Updating toolusage

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:53.366
!MESSAGE XSCT Command: [::hsi::utils::get_ps_config_params -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:53.401
!MESSAGE XSCT command with result: [::hsi::utils::get_ps_config_params -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, {"PCW_APU_PERIPHERAL_FREQMHZ": "666.666666",
"PCW_DDR_HPRLPR_QUEUE_PARTITION": "HPR(0)/LPR(32)",
"PCW_DDR_HPR_TO_CRITICAL_PRIORITY_LEVEL": "15",
"PCW_DDR_LPR_TO_CRITICAL_PRIORITY_LEVEL": "2",
"PCW_DDR_PORT0_HPR_ENABLE": "0",
"PCW_DDR_PORT1_HPR_ENABLE": "0",
"PCW_DDR_PORT2_HPR_ENABLE": "0",
"PCW_DDR_PORT3_HPR_ENABLE": "0",
"PCW_DDR_WRITE_TO_CRITICAL_PRIORITY_LEVEL": "2",
"PCW_FPGA0_PERIPHERAL_FREQMHZ": "100",
"PCW_UIPARAM_DDR_BUS_WIDTH": "32 Bit",
"PCW_UIPARAM_DDR_FREQ_MHZ": "533.333333",
}]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:53.401
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.031
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0], Result: [null, {"axi_bram_ctrl_0": {},
"axi_bram_ctrl_1": {},
"axi_bram_ctrl_2": {},
"axi_bram_ctrl_3": {},
"axi_bram_ctrl_4": {},
"axi_bram_ctrl_5": {},
"axi_bram_ctrl_6": {},
"axi_bram_ctrl_7": {},
"axi_bram_ctrl_8": {},
"axi_dma_4": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_dma_5": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_gpio_0": {"GPIO_DATA": {"description": "Channel-1 AXI GPIO Data register",
"address_offset": "0x0",
"access": "read-write",
"size": "2",
"fields": {"Channel-1 GPIO DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO_TRI": {"description": "Channel-1 AXI GPIO 3-State Control register",
"address_offset": "0x4",
"access": "read-write",
"size": "2",
"fields": {"Channel-1 GPIO TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO2_DATA": {"description": "Channel-2 AXI GPIO Data register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"fields": {"Channel-2 GPIO DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO2_TRI": {"description": "Channel-2 AXI GPIO 3-State Control register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"fields": {"Channel-2 GPIO TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GIER": {"description": "Global Interrupt Enable register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"fields": {"Global Interrupt Enable": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output
  0 - Disabled
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IP_IER": {"description": "IP Interrupt Enable register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"fields": {"Channel-1 Interrupt Enable": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Channel-2 Interrupt Enable": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 2 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IP_ISR": {"description": "IP Interrupt Status register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"fields": {"Channel-1 Interrupt Status": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 Interrupt Status
  0 - No Channel 1 input interrupt
  1 - Channel 1 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Channel-2 Interrupt Status": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 2 Interrupt Status
  0 - No Channel 2 input interrupt
  1 - Channel 2 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_iic_0": {"GIE": {"description": "Global Interrupt Enable Register",
"address_offset": "0x1c",
"access": "read-write",
"size": "32",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable
0 - All Interrupts disabled; no interrupt (even if unmasked in IER) possible from AXI IIC core
1 - Unmasked AXI IIC core interrupts are passed to processor
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x020",
"access": "read-write",
"size": "32",
"fields": {"int0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt0 - Arbitration Lost
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int1": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt1 - Transmit Error/Slave Transmit Complete
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int2": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt2 - Transmit FIFO Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int3": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt3 - Recieve FIFO FULL
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt4 - IIC Bus is Not Busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int5": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt5 - Addressed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int6": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt6 - Not Addessed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int7": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt7 - Transmit FIFO Half Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x028",
"access": "read-write",
"size": "32",
"fields": {"int0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt0 - Arbitration Lost
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int1": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt1 - Transmit Error/Slave Transmit Complete
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int2": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt2 - Transmit FIFO Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int3": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt3 - Recieve FIFO FULL
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt4 - IIC Bus is Not Busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int5": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt5 - Addressed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int6": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt6 - Not Addessed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int7": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt7 - Transmit FIFO Half Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SOFTR": {"description": "Soft Reset Register",
"address_offset": "0x040",
"access": "read-write",
"size": "32",
"fields": {"RKEY": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Reset Key - Firmware must write a value of 0xA to this field to
            cause a soft reset of the Interrupt registers of AXI IIC controller.
            Writing any other value results in an AXI transaction
            acknowledgement with SLVERR and no reset occurs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"CR": {"description": "Control Register",
"address_offset": "0x100",
"access": "read-write",
"size": "32",
"fields": {"EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "This bit must be set before any other CR bits have any effect
0 - resets and disables the AXI IIC controller but not the registers or FIFOs
1 - enables the AXI IIC controller
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "This bit must be set to flush the FIFO if either (a) arbitration is lost or (b) if a transmit error occurs
0 - transmit FIFO normal operation
1 - resets the transmit FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSMS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "When this bit is changed from 0 to 1, the
AXI IIC bus interface generates a START condition in master mode. When
this bit is cleared, a STOP condition is generated and the AXI IIC bus
interface switches to slave mode. When this bit is cleared by the
hardware, because arbitration for the bus has been lost, a STOP
condition is not generated
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "This bit selects the direction of master/slave transfers.
0 - selects an AXI IIC receive
1 - selects an AXI IIC transmit
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXAK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "This bit specifies the value driven onto
the sda line during acknowledge cycles for both master and slave recievers.
0 - acknowledge
1 - not-acknowledge
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RSTA": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit generates a repeated START 
condition on the bus if the AXI IIC bus interface is the current bus
master. Attempting a repeated START at the wrong time, if the bus is
owned by another master, results in a loss of arbitration. This bit is reset
when the repeated start occurs. This bit must be set prior to writing the
new address to the TX_FIFO or DTR
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"GC_EN": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Setting this bit High allows the AXI IIC to respond to a general call address.
0 - General Call Disabled
1 - General Call Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SR": {"description": "Status Register",
"address_offset": "0x104",
"access": "read-only",
"size": "32",
"fields": {"ABGC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set to 1 when another master has issued a general call and
the general call enable bit is set to 1, CR(6) = 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AAS": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "When the address on the IIC bus matches the slave address in the Address register (ADR), the IIC bus interface
is being addressed as a slave and switches to slave mode. If 10-bit addressing is selected this device only responds to a 10-bit
address or general call if enabled. This bit is cleared when a stop
condition is detected or a repeated start occurs.
0 - indicates not being addressed as a slave
1 - indicates being addressed as a slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BB": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "This bit indicates the status of the IIC bus. This bit is set
when a START condition is detected and cleared when a STOP
condition is detected.
0 - indicates the bus is idle
1 - indicates the bus is busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ARW": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "When the IIC bus interface has been addressed as a slave (AAS is set), 
this bit indicates the value of the read/write bit sent by the master.
This bit is only valid when a complete transfer has occurred and
no other transfers have been initiated.
0 - indicates master writing to slave
1 - indicates master reading from slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Full": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set High when the transmit FIFO is full.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Full": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set High when the receive FIFO is full.
This bit is set only when all 16 locations in the FIFO are full,
regardless of the compare value field of the RX_FIFO_PIRQ register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Empty": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "This is set High when the receive FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Empty": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "This is set High when the transmit FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TX_FIFO": {"description": "Transmit FIFO Register",
"address_offset": "0x108",
"access": "write-only",
"size": "32",
"fields": {"D7_D0": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "If the dynamic stop bit is used and the AXI IIC is a master receiver,
the value is the number of bytes to receive.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Start": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "The dynamic start bit can be used to send a start or repeated start sequence on the
IIC bus. A start sequence is generated if the MSMS = 0, a
repeated start sequence is generated if the MSMS = 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stop": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "The dynamic stop bit can be used to send an IIC stop
sequence on the IIC bus after the last byte has been transmitted or received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO": {"description": "Recieve FIFO Register",
"address_offset": "0x10C",
"access": "read-only",
"size": "32",
"fields": {"D7_D0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "IIC Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"ADR": {"description": "Slave Address Register",
"address_offset": "0x110",
"access": "read-write",
"size": "32",
"fields": {"Slave_Address": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "7",
"desc": "Address used by the IIC bus interface when in slave mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TX_FIFO_OCY": {"description": "Transmit FIFO Occupency Register",
"address_offset": "0x114",
"access": "read-only",
"size": "32",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 indicates that
10 locations are full in the FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO_OCY": {"description": "Recieve FIFO Occupency Register",
"address_offset": "0x118",
"access": "read-only",
"size": "32",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 indicates that
10 locations are full in the FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TEN_ADR": {"description": "Slave Ten Bit Address Register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"fields": {"MSB of Slave Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "3",
"desc": "Three MSBs of the 10-bit address used by the AXI IIC bus interface when in slave mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO_PIRQ": {"description": "Recieve FIFO Programmable Depth Interrupt Register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"fields": {"Compare Value": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 implies that when
10 locations in the receive FIFO are filled, the receive FIFO
interrupt is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPO": {"description": "General Purpose Output Register",
"address_offset": "0x124",
"access": "read-write",
"size": "1",
"fields": {"General Purpose Outputs": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The LSB (Bit[0]) is the first bit populated
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUSTA": {"description": "Timing Parameter TSUSTA Register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"fields": {"TSUSTA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Setup time for a repeated START condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUSTO": {"description": "Timing Parameter TSUSTO Register",
"address_offset": "0x12C",
"access": "read-write",
"size": "32",
"fields": {"TSUSTO": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Setup time for a repeated STOP condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THDSTA": {"description": "Timing Parameter THDSTA Register",
"address_offset": "0x130",
"access": "read-write",
"size": "32",
"fields": {"THDSTA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Hold time for a repeated START condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUDAT": {"description": "Timing Parameter TSUDAT Register",
"address_offset": "0x134",
"access": "read-write",
"size": "32",
"fields": {"TSUDAT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Data Setup time
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TBUF": {"description": "Timing Parameter TBUF Register",
"address_offset": "0x138",
"access": "read-write",
"size": "32",
"fields": {"TBUF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bus free time between a STOP and START condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THIGH": {"description": "Timing Parameter THIGH Register",
"address_offset": "0x138",
"access": "read-write",
"size": "32",
"fields": {"THIGH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "High Period of the scl clock.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TLOW": {"description": "Timing Parameter TLOW Register",
"address_offset": "0x140",
"access": "read-write",
"size": "32",
"fields": {"TLOW": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Low Period of scl clock.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THDDAT": {"description": "Timing Parameter THDDAT Register",
"address_offset": "0x144",
"access": "read-write",
"size": "32",
"fields": {"THDDAT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Data Hold time
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_quad_spi_0": {},
"axi_uart16550_0": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_1": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_10": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_11": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_2": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_3": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_4": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_5": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_6": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_7": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_8": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_9": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"ps7_afi_0": {},
"ps7_afi_1": {},
"ps7_afi_2": {},
"ps7_afi_3": {},
"ps7_coresight_comp_0": {},
"ps7_ddr_0": {},
"ps7_ddrc_0": {},
"ps7_dev_cfg_0": {},
"ps7_dma_ns": {},
"ps7_dma_s": {},
"ps7_ethernet_0": {},
"ps7_globaltimer_0": {},
"ps7_gpio_0": {},
"ps7_gpv_0": {},
"ps7_intc_dist_0": {},
"ps7_iop_bus_config_0": {},
"ps7_l2cachec_0": {},
"ps7_ocmc_0": {},
"ps7_pl310_0": {},
"ps7_pmu_0": {},
"ps7_qspi_0": {},
"ps7_qspi_linear_0": {},
"ps7_ram_0": {},
"ps7_ram_1": {},
"ps7_scuc_0": {},
"ps7_scugic_0": {},
"ps7_scutimer_0": {},
"ps7_scuwdt_0": {},
"ps7_slcr_0": {},
"ps7_uart_1": {},
"ps7_xadc_0": {},
}]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.050
!MESSAGE XSCT Command: [::hsi::utils::get_addr_ranges -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.097
!MESSAGE XSCT command with result: [::hsi::utils::get_addr_ranges -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0], Result: [null, {"axi_dma_4_S_AXI_LITE": {"name": "axi_dma_4",
"base": "0x80400000",
"high": "0x8040FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_dma_5_S_AXI_LITE": {"name": "axi_dma_5",
"base": "0x80410000",
"high": "0x8041FFFF",
"size": "65536",
"slaveintf": "S_AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_gpio_0_S_AXI": {"name": "axi_gpio_0",
"base": "0x81200000",
"high": "0x8120FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_iic_0_S_AXI": {"name": "axi_iic_0",
"base": "0x81600000",
"high": "0x8160FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_quad_spi_0_AXI_LITE": {"name": "axi_quad_spi_0",
"base": "0x81E00000",
"high": "0x81E0FFFF",
"size": "65536",
"slaveintf": "AXI_LITE",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_0_S_AXI": {"name": "axi_uart16550_0",
"base": "0x83C00000",
"high": "0x83C0FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_1_S_AXI": {"name": "axi_uart16550_1",
"base": "0x83C10000",
"high": "0x83C1FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_2_S_AXI": {"name": "axi_uart16550_2",
"base": "0x83C20000",
"high": "0x83C2FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_3_S_AXI": {"name": "axi_uart16550_3",
"base": "0x83C30000",
"high": "0x83C3FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_4_S_AXI": {"name": "axi_uart16550_4",
"base": "0x83C40000",
"high": "0x83C4FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_5_S_AXI": {"name": "axi_uart16550_5",
"base": "0x83C50000",
"high": "0x83C5FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_6_S_AXI": {"name": "axi_uart16550_6",
"base": "0x83C60000",
"high": "0x83C6FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_7_S_AXI": {"name": "axi_uart16550_7",
"base": "0x83C70000",
"high": "0x83C7FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_8_S_AXI": {"name": "axi_uart16550_8",
"base": "0x83C80000",
"high": "0x83C8FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_9_S_AXI": {"name": "axi_uart16550_9",
"base": "0x83C90000",
"high": "0x83C9FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_10_S_AXI": {"name": "axi_uart16550_10",
"base": "0x83CA0000",
"high": "0x83CAFFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_uart16550_11_S_AXI": {"name": "axi_uart16550_11",
"base": "0x83CB0000",
"high": "0x83CBFFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_0": {"name": "ps7_afi_0",
"base": "0xF8008000",
"high": "0xF8008FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_1": {"name": "ps7_afi_1",
"base": "0xF8009000",
"high": "0xF8009FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_2": {"name": "ps7_afi_2",
"base": "0xF800A000",
"high": "0xF800AFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_afi_3": {"name": "ps7_afi_3",
"base": "0xF800B000",
"high": "0xF800BFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_coresight_comp_0": {"name": "ps7_coresight_comp_0",
"base": "0xF8800000",
"high": "0xF88FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ddrc_0": {"name": "ps7_ddrc_0",
"base": "0xF8006000",
"high": "0xF8006FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dev_cfg_0": {"name": "ps7_dev_cfg_0",
"base": "0xF8007000",
"high": "0xF80070FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dma_ns": {"name": "ps7_dma_ns",
"base": "0xF8004000",
"high": "0xF8004FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_dma_s": {"name": "ps7_dma_s",
"base": "0xF8003000",
"high": "0xF8003FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ethernet_0": {"name": "ps7_ethernet_0",
"base": "0xE000B000",
"high": "0xE000BFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_globaltimer_0": {"name": "ps7_globaltimer_0",
"base": "0xF8F00200",
"high": "0xF8F002FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_gpio_0": {"name": "ps7_gpio_0",
"base": "0xE000A000",
"high": "0xE000AFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_gpv_0": {"name": "ps7_gpv_0",
"base": "0xF8900000",
"high": "0xF89FFFFF",
"size": "1048576",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_intc_dist_0": {"name": "ps7_intc_dist_0",
"base": "0xF8F01000",
"high": "0xF8F01FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_iop_bus_config_0": {"name": "ps7_iop_bus_config_0",
"base": "0xE0200000",
"high": "0xE0200FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_l2cachec_0": {"name": "ps7_l2cachec_0",
"base": "0xF8F02000",
"high": "0xF8F02FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ocmc_0": {"name": "ps7_ocmc_0",
"base": "0xF800C000",
"high": "0xF800CFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_pl310_0": {"name": "ps7_pl310_0",
"base": "0xF8F02000",
"high": "0xF8F02FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_pmu_0": {"name": "ps7_pmu_0",
"base": "0xF8893000",
"high": "0xF8893FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_qspi_0": {"name": "ps7_qspi_0",
"base": "0xE000D000",
"high": "0xE000DFFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_qspi_linear_0": {"name": "ps7_qspi_linear_0",
"base": "0xFC000000",
"high": "0xFCFFFFFF",
"size": "16777216",
"slaveintf": "",
"type": "FLASH",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scuc_0": {"name": "ps7_scuc_0",
"base": "0xF8F00000",
"high": "0xF8F000FC",
"size": "253",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scugic_0": {"name": "ps7_scugic_0",
"base": "0xF8F00100",
"high": "0xF8F001FF",
"size": "256",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scutimer_0": {"name": "ps7_scutimer_0",
"base": "0xF8F00600",
"high": "0xF8F0061F",
"size": "32",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_scuwdt_0": {"name": "ps7_scuwdt_0",
"base": "0xF8F00620",
"high": "0xF8F006FF",
"size": "224",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_slcr_0": {"name": "ps7_slcr_0",
"base": "0xF8000000",
"high": "0xF8000FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_uart_1": {"name": "ps7_uart_1",
"base": "0xE0001000",
"high": "0xE0001FFF",
"size": "4096",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_xadc_0": {"name": "ps7_xadc_0",
"base": "0xF8007100",
"high": "0xF8007120",
"size": "33",
"slaveintf": "",
"type": "REGISTER",
"flags": "3",
"segment": "",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_0_S_AXI_Mem0": {"name": "axi_bram_ctrl_0",
"base": "0x40000000",
"high": "0x4000FFFF",
"size": "65536",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_1_S_AXI_Mem0": {"name": "axi_bram_ctrl_1",
"base": "0x42000000",
"high": "0x42001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_2_S_AXI_Mem0": {"name": "axi_bram_ctrl_2",
"base": "0x44000000",
"high": "0x44001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_3_S_AXI_Mem0": {"name": "axi_bram_ctrl_3",
"base": "0x46000000",
"high": "0x46001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_4_S_AXI_Mem0": {"name": "axi_bram_ctrl_4",
"base": "0x48000000",
"high": "0x48001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_5_S_AXI_Mem0": {"name": "axi_bram_ctrl_5",
"base": "0x4A000000",
"high": "0x4A001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_6_S_AXI_Mem0": {"name": "axi_bram_ctrl_6",
"base": "0x4C000000",
"high": "0x4C001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_7_S_AXI_Mem0": {"name": "axi_bram_ctrl_7",
"base": "0x4E000000",
"high": "0x4E001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"axi_bram_ctrl_8_S_AXI_Mem0": {"name": "axi_bram_ctrl_8",
"base": "0x50000000",
"high": "0x50001FFF",
"size": "8192",
"slaveintf": "S_AXI",
"type": "MEMORY",
"flags": "7",
"segment": "Mem0",
"acctype": "",
"tz": "",
},
"ps7_ddr_0": {"name": "ps7_ddr_0",
"base": "0x00100000",
"high": "0x3FFFFFFF",
"size": "1072693248",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ram_0": {"name": "ps7_ram_0",
"base": "0x00000000",
"high": "0x0002FFFF",
"size": "196608",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
"ps7_ram_1": {"name": "ps7_ram_1",
"base": "0xFFFF0000",
"high": "0xFFFFFDFF",
"size": "65024",
"slaveintf": "",
"type": "MEMORY",
"flags": "7",
"segment": "",
"acctype": "",
"tz": "",
},
}]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.099
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_ENABLED], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.101
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_ENABLED], Result: [null, ]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.102
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_EVENT_COUNTERS], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.104
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_EVENT_COUNTERS], Result: [null, ]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.104
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_LATENCY_COUNTERS], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.107
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_LATENCY_COUNTERS], Result: [null, ]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.108
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_COUNTER_WIDTH], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.110
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_DEBUG_COUNTER_WIDTH], Result: [null, ]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.110
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_FREQ], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.113
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_FREQ], Result: [null, ]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.113
!MESSAGE XSCT Command: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_CPU_CLK_FREQ_HZ], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.115
!MESSAGE XSCT command with result: [::hsi::utils::get_hw_param_value D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_0 C_CPU_CLK_FREQ_HZ], Result: [null, 675000000]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.116
!MESSAGE XSCT Command: [::hsi::utils::get_cpu_nr -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.122
!MESSAGE XSCT command with result: [::hsi::utils::get_cpu_nr -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf], Result: [null, {"ps7_cortexa9_0": {"bscan": "",
"index": "0",
},
"ps7_cortexa9_1": {"bscan": "",
"index": "1",
},
}]. Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.122
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1], Thread: Worker-71

!ENTRY com.xilinx.sdk.utils 0 0 2021-03-02 14:54:54.731
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json D:/Users/xin.han/Desktop/ram_ls/IO10/top_hw_platform_0/system.hdf ps7_cortexa9_1], Result: [null, {"axi_bram_ctrl_0": {},
"axi_bram_ctrl_1": {},
"axi_bram_ctrl_2": {},
"axi_bram_ctrl_3": {},
"axi_bram_ctrl_4": {},
"axi_bram_ctrl_5": {},
"axi_bram_ctrl_6": {},
"axi_bram_ctrl_7": {},
"axi_bram_ctrl_8": {},
"axi_dma_4": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_dma_5": {"MM2S_DMACR": {"description": "MM2S DMA Control Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are potentially terminated early. Setting either MM2S_DMACR. Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Normal operation.   1 - Reset in progress.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Read. Setting this bit to 1 causes AXI DMA to initiate MM2S reads (AXI4read) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be updated when AXI DMA is in idle. When using keyhole operation the Max Burst Length should not exceed 16. This bit should not be set when DRE is enabled.
This bit is non functional when the multichannel feature is enabled or in Direct Register mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit should be set/unset only when the DMA is idle or when not running. Updating this bit while the DMA is running can result in unexpected behavior.
This bit is non functional when DMA operates in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows DMASR.IOC_Irq to generate an interrupt out for descriptors with the IOC bit set.   0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows DMASR.Dly_Irq to generate an interrupt out.      0 - Delay Interrupt disabled   1 - Delay Interrupt enabled Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable.
  0 - Error Interrupt disabled
  1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.   Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.   Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: This field is ignored when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_DMASR": {"description": "MM2S DMA Status Register",
"address_offset": "0x04",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter / Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register mode (C_INCLUDE_SG = 0) this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle. For Scatter / Gather Mode, SG has not reached tail descriptor pointer and/or DMA operations in progress. For Direct Register Mode, transfer is not complete.      1 - Idle. For Scatter / Gather Mode, SG has reached tail descriptor pointer and DMA operation paused. for Direct Register Mode, DMA transfer has completed and controller is paused.  Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Scatter Gather Enabled
0 - Scatter Gather not enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. Internal error occurs if the buffer length specified in the fetched descriptor is set to 0. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors        1 - DMA Internal Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected. DMA Engine halts
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Decode Errors.      1 - DMA Decode Error detected. DMA Engine halts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. Refer to the Scatter Gather Descriptor section for more information.This indicates to the SG Engine that the descriptor is a stale descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts.  Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit is enabled in the MM2S_DMACR (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected.  Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the MM2S_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected. Note: This bit is not used and is fixed at 0 when AXI DMA is configured for Direct Register Mode. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the MM2S_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.   
0 - No error Interrupt.   
1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA": {"description": "MM2S Source Address Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_SA_MSB": {"description": "MM2S Source Address Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"fields": {"Source_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the source address AXI DMA reads from to transfer data to AXI4-Stream on the MM2S Channel.
Note: If Data Realignment Engine is included, the Source Address can be at any byte offset. If Data Realignment Engine is not included, the Source Address must be MM2S Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MM2S_LENGTH": {"description": "MM2S DMA Transfer Length Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the number of bytes to transfer for the MM2S channel. Writing a non-zero value to this register starts the MM2S transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMACR": {"description": "S2MM DMA Control Register",
"address_offset": "0x30",
"access": "read-write",
"size": "32",
"fields": {"RS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Run / Stop control for controlling running and stopping of the DMA channel.
  0 - Stop  DMA stops when current (if any) DMA operations are complete. For Scatter / Gather Mode pending commands/transfers are flushed or completed. 
  AXI4-Stream outs are potentially terminated early. Descriptors in the update queue are allowed to finish updating to remote memory before engine halt.
  For Direct Register mode pending commands/transfers are flushed or completed. AXI4-Stream outs are potentially terminated. Data integrity on S2MM AXI4 cannot be guaranteed.
  The halted bit in the DMA Status register asserts to 1 when the DMA engine is halted. This bit is cleared by AXI DMA hardware when an error occurs. The CPU can also choose to clear this bit to stop DMA operations.
  1 - Run  Start DMA operations. The halted bit in the DMA Status register deasserts to 0 when the DMA engine begins operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Soft reset for resetting the AXI DMA core. Setting this bit to a 1 causes the AXI DMA to be reset. Reset is accomplished gracefully. Pending commands/transfers are flushed or completed.
AXI4-Stream outs are terminated early, if necessary with associated TLAST. Setting either MM2S_DMACR.Reset = 1 or S2MM_DMACR.Reset = 1 resets the entire AXI DMA engine. After completion of a soft reset, all registers and bits are in the Reset State.      0 - Reset not in progress. Normal operation.      1 - Reset in progress
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Keyhole": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Keyhole Write. Setting this bit to 1 causes AXI DMA to initiate S2MM writes (AXI4 Writes) in non-incrementing address mode (Fixed Address Burst transfer on AXI4). This bit can be modified when AXI DMA is in idle. When enabling Key hole operation the maximum burst length cannot be more than 16. This bit should not be set when DRE is enabled.
This bit is non functional when DMA is used in multichannel mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Cyclic_BD_Enable": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "When set to 1, the DMA operates in Cyclic Buffer Descriptor (BD) mode without any user intervention. In this mode, the Scatter Gather module ignores the Completed bit of the BD. With this bit set, you can use the same BDs in cyclic manner without worrying about any stale descriptor errors.
This bit is non functional when DMA operates in Multichannel mode. or in Direct Register Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_IrqEn": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete (IOC) Interrupt Enable. When set to 1, allows Interrupt On Complete events to generate an interrupt out for descriptors with the Complete bit set.      0 - IOC Interrupt disabled      1 - IOC Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_IrqEn": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay Timer Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Delay Interrupt disabled      1 - Delay Interrupt enabled  Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_IrqEn": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error Interrupt Enable. When set to 1, allows error events to generate an interrupt out.      0 - Error Interrupt disabled      1 - Error Interrupt enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThreshold": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold. This value is used for setting the interrupt threshold. When IOC interrupt events occur, an internal counter counts down from the Interrupt Threshold setting. When the count reaches zero, an interrupt out is generated by the DMA engine.
Note: The minimum setting for the threshold is 0x01. A write of 0x00 to this register has no effect.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelay": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Out. This value is used for setting the interrupt timeout value. The interrupt timeout mechanism causes the DMA engine to generate an interrupt after the delay time period has expired. Timer begins counting at the end of a packet and resets with receipt of a new packet or a timeout event occurs.
Note: Setting this value to zero disables the delay timer interrupt.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DMASR": {"description": "S2MM DMA Status Register",
"address_offset": "0x34",
"access": "read-write",
"size": "32",
"fields": {"Halted": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Halted. Indicates the run/stop state of the DMA channel.      0 - DMA channel running.      1 - DMA channel halted.  For Scatter/Gather Mode this bit gets set when DMACR.RS = 0 and DMA and SG operations have halted. For Direct Register Mode this bit gets set when DMACR.RS = 0 and DMA operations have halted. There can be a lag of time between when DMACR.RS = 0 and when DMASR.Halted = 1 
Note: When halted (RS= 0 and Halted = 1), writing to CURDESC_PTR or TAILDESC_PTR pointer registers has no effect on DMA operations when in Scatter Gather Mode. For Direct Register Mode, writing to the LENGTH register has no effect on DMA operations.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Idle": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Channel Idle. Indicates the state of AXI DMA operations.
For Scatter / Gather Mode when IDLE indicates the SG Engine has reached the tail pointer for the associated channel and all queued descriptors have been processed. Writing to the tail pointer register automatically restarts DMA operations.
For Direct Register Mode when IDLE indicates the current transfer has completed.      0 - Not Idle.      1 - Idle.   Note: This bit is 0 when channel is halted (DMASR.Halted=1). This bit is also 0 prior to initial transfer when AXI DMA configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIncld": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Engine Included. DMASR.SGIncld = 1 indicates the Scatter Gather engine is included and the AXI DMA is configured for Scatter Gather mode. DMASR.SGIncld = 0 indicates the Scatter Gather engine is excluded and the AXI DMA is configured for Direct Register Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMAIntErr": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Internal Error. This error occurs if the buffer length specified in the fetched descriptor is set to 0. Also, when in Scatter Gather Mode and using the status app length field, this error occurs when the Status AXI4-Stream packet RxLength field does not match the S2MM packet being received by the S_AXIS_S2MM interface. When Scatter Gather is disabled, this error is flagged if any error occurs during Memory write or if the incoming packet is bigger than what is specified in the DMA length register.
This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Internal Errors      1 - DMA Internal Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMASlvErr": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Slave Error. This error occurs if the slave read from the Memory Map interface issues a Slave Error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No DMA Slave Errors.      1 - DMA Slave Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMADecErr": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "DMA Decode Error. This error occurs if the address request points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.     0 - No DMA Decode Errors.   1 - DMA Decode Error detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGIntErr": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Internal Error. This error occurs if a descriptor with the Complete bit already set is fetched. This indicates to the SG Engine that the descriptor is a tail descriptor. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Internal Errors.      1 - SG Internal Error detected.  Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGSlvErr": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Slave Error. This error occurs if the slave read from on the Memory Map interface issues a Slave error. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Slave Errors.      1 - SG Slave Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SGDecErr": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Scatter Gather Decode Error. This error occurs if CURDESC_PTR and/or NXTDESC_PTR points to an invalid address. This error condition causes the AXI DMA to halt gracefully. The DMACR.RS bit is set to 0, and when the engine has completely shut down, the DMASR.Halted bit is set to 1.      0 - No SG Decode Errors.      1 - SG Decode Error detected. DMA Engine halts. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IOC_Irq": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Complete. When set to 1 for Scatter/Gather Mode, indicates an interrupt event was generated on completion of a descriptor. This occurs for descriptors with the End of Frame (EOF) bit set. When set to 1 for Direct Register Mode, indicates an interrupt event was generated on completion of a transfer. If the corresponding bit in S2MM_DMACR is enabled (IOC_IrqEn = 1) and if the interrupt threshold has been met, causes an interrupt out to be generated from the AXI DMA.      0 - No IOC Interrupt.      1 - IOC Interrupt detected. Writing a 1 to this bit will clear it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Dly_Irq": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Delay. When set to 1, indicates an interrupt event was generated on delay timer time out. If the corresponding bit is enabled in the S2MM_DMACR (Dly_IrqEn = 1), an interrupt out is generated from the AXI DMA.      0 - No Delay Interrupt.      1 - Delay Interrupt detected.1 = IOC Interrupt detected. Writing a 1 to this bit will clear it. Note: Applicable only when Scatter Gather is enabled. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Err_Irq": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt on Error. When set to 1, indicates an interrupt event was generated on error. If the corresponding bit is enabled in the S2MM_DMACR (Err_IrqEn = 1), an interrupt out is generated from the AXI DMA.
Writing a 1 to this bit will clear it.      0 - No error Interrupt.      1 - Error interrupt detected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQThresholdSts": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Threshold Status. Indicates current interrupt threshold value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRQDelaySts": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Interrupt Delay Time Status. Indicates current interrupt delay time value.
Note: Applicable only when Scatter Gather is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA": {"description": "S2MM DMA Destination Address Register",
"address_offset": "0x48",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the destination address the AXI DMA writes to transfer data from AXI4-Stream on S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Destination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_DA_MSB": {"description": "S2MM Destination Address Register",
"address_offset": "0x4C",
"access": "read-write",
"size": "32",
"fields": {"Destination_Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Indicates the MSB 32 bits of the Destination address AXI DMA writes to transfer data from AXI4-Stream on the S2MM Channel.
Note: If Data Realignment Engine is included, the Destination Address can be at any byte offset. If Data Realignment Engine is not included, the Dstination Address must be S2MM Memory Map data width aligned.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"S2MM_LENGTH": {"description": "S2MM DMA Transfer Length Register",
"address_offset": "0x58",
"access": "read-write",
"size": "32",
"fields": {"Length": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "Indicates the length in bytes of the S2MM buffer available to write receive data from the S2MM channel. Writing a non-zero value to this register enables S2MM channel to receive packet data.
At the completion of the S2MM transfer, the number of actual bytes written on the S2MM AXI4 interface is updated to the S2MM_LENGTH register.
Note: This value must be greater than or equal to the largest expected packet to be received on S2MM AXI4-Stream. Values smaller than the received packet result in undefined behavior. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_gpio_0": {"GPIO_DATA": {"description": "Channel-1 AXI GPIO Data register",
"address_offset": "0x0",
"access": "read-write",
"size": "2",
"fields": {"Channel-1 GPIO DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO_TRI": {"description": "Channel-1 AXI GPIO 3-State Control register",
"address_offset": "0x4",
"access": "read-write",
"size": "2",
"fields": {"Channel-1 GPIO TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO2_DATA": {"description": "Channel-2 AXI GPIO Data register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"fields": {"Channel-2 GPIO DATA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO Data Register.
For each I/O bit programmed as input
  R - Reads value on the input pin.
  W - No effect.
For each I/O bit programmed as output
  R - Reads value on GPIO_O pins
  W - Writes value to the corresponding AXI GPIO 
      data register bit and output pin
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPIO2_TRI": {"description": "Channel-2 AXI GPIO 3-State Control register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"fields": {"Channel-2 GPIO TRI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "AXI GPIO 3-State Control Register
Each I/O pin of the AXI GPIO is individually programmable as an input or output   For each of the bits     0 - I/O pin configured as output     1 - I/O pin configured as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GIER": {"description": "Global Interrupt Enable register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"fields": {"Global Interrupt Enable": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output
  0 - Disabled
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IP_IER": {"description": "IP Interrupt Enable register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"fields": {"Channel-1 Interrupt Enable": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Channel-2 Interrupt Enable": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 2 Interrupt
  0 - Disabled (masked)
  1 - Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IP_ISR": {"description": "IP Interrupt Status register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"fields": {"Channel-1 Interrupt Status": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 Interrupt Status
  0 - No Channel 1 input interrupt
  1 - Channel 1 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Channel-2 Interrupt Status": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 2 Interrupt Status
  0 - No Channel 2 input interrupt
  1 - Channel 2 input interrupt
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_iic_0": {"GIE": {"description": "Global Interrupt Enable Register",
"address_offset": "0x1c",
"access": "read-write",
"size": "32",
"fields": {"GIE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Global Interrupt Enable
0 - All Interrupts disabled; no interrupt (even if unmasked in IER) possible from AXI IIC core
1 - Unmasked AXI IIC core interrupts are passed to processor
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x020",
"access": "read-write",
"size": "32",
"fields": {"int0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt0 - Arbitration Lost
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int1": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt1 - Transmit Error/Slave Transmit Complete
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int2": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt2 - Transmit FIFO Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int3": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt3 - Recieve FIFO FULL
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt4 - IIC Bus is Not Busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int5": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt5 - Addressed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int6": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt6 - Not Addessed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int7": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt7 - Transmit FIFO Half Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x028",
"access": "read-write",
"size": "32",
"fields": {"int0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt0 - Arbitration Lost
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int1": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt1 - Transmit Error/Slave Transmit Complete
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int2": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt2 - Transmit FIFO Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int3": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt3 - Recieve FIFO FULL
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int4": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt4 - IIC Bus is Not Busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int5": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt5 - Addressed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int6": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt6 - Not Addessed As Slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"int7": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Interrupt7 - Transmit FIFO Half Empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SOFTR": {"description": "Soft Reset Register",
"address_offset": "0x040",
"access": "read-write",
"size": "32",
"fields": {"RKEY": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Reset Key - Firmware must write a value of 0xA to this field to
            cause a soft reset of the Interrupt registers of AXI IIC controller.
            Writing any other value results in an AXI transaction
            acknowledgement with SLVERR and no reset occurs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"CR": {"description": "Control Register",
"address_offset": "0x100",
"access": "read-write",
"size": "32",
"fields": {"EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "This bit must be set before any other CR bits have any effect
0 - resets and disables the AXI IIC controller but not the registers or FIFOs
1 - enables the AXI IIC controller
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "This bit must be set to flush the FIFO if either (a) arbitration is lost or (b) if a transmit error occurs
0 - transmit FIFO normal operation
1 - resets the transmit FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MSMS": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "When this bit is changed from 0 to 1, the
AXI IIC bus interface generates a START condition in master mode. When
this bit is cleared, a STOP condition is generated and the AXI IIC bus
interface switches to slave mode. When this bit is cleared by the
hardware, because arbitration for the bus has been lost, a STOP
condition is not generated
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "This bit selects the direction of master/slave transfers.
0 - selects an AXI IIC receive
1 - selects an AXI IIC transmit
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXAK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "This bit specifies the value driven onto
the sda line during acknowledge cycles for both master and slave recievers.
0 - acknowledge
1 - not-acknowledge
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RSTA": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit generates a repeated START 
condition on the bus if the AXI IIC bus interface is the current bus
master. Attempting a repeated START at the wrong time, if the bus is
owned by another master, results in a loss of arbitration. This bit is reset
when the repeated start occurs. This bit must be set prior to writing the
new address to the TX_FIFO or DTR
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"GC_EN": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Setting this bit High allows the AXI IIC to respond to a general call address.
0 - General Call Disabled
1 - General Call Enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SR": {"description": "Status Register",
"address_offset": "0x104",
"access": "read-only",
"size": "32",
"fields": {"ABGC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set to 1 when another master has issued a general call and
the general call enable bit is set to 1, CR(6) = 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AAS": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "When the address on the IIC bus matches the slave address in the Address register (ADR), the IIC bus interface
is being addressed as a slave and switches to slave mode. If 10-bit addressing is selected this device only responds to a 10-bit
address or general call if enabled. This bit is cleared when a stop
condition is detected or a repeated start occurs.
0 - indicates not being addressed as a slave
1 - indicates being addressed as a slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BB": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "This bit indicates the status of the IIC bus. This bit is set
when a START condition is detected and cleared when a STOP
condition is detected.
0 - indicates the bus is idle
1 - indicates the bus is busy
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ARW": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "When the IIC bus interface has been addressed as a slave (AAS is set), 
this bit indicates the value of the read/write bit sent by the master.
This bit is only valid when a complete transfer has occurred and
no other transfers have been initiated.
0 - indicates master writing to slave
1 - indicates master reading from slave
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Full": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set High when the transmit FIFO is full.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Full": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "This bit is set High when the receive FIFO is full.
This bit is set only when all 16 locations in the FIFO are full,
regardless of the compare value field of the RX_FIFO_PIRQ register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Empty": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "This is set High when the receive FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Empty": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "This is set High when the transmit FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TX_FIFO": {"description": "Transmit FIFO Register",
"address_offset": "0x108",
"access": "write-only",
"size": "32",
"fields": {"D7_D0": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "If the dynamic stop bit is used and the AXI IIC is a master receiver,
the value is the number of bytes to receive.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Start": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "The dynamic start bit can be used to send a start or repeated start sequence on the
IIC bus. A start sequence is generated if the MSMS = 0, a
repeated start sequence is generated if the MSMS = 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stop": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "The dynamic stop bit can be used to send an IIC stop
sequence on the IIC bus after the last byte has been transmitted or received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO": {"description": "Recieve FIFO Register",
"address_offset": "0x10C",
"access": "read-only",
"size": "32",
"fields": {"D7_D0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "IIC Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"ADR": {"description": "Slave Address Register",
"address_offset": "0x110",
"access": "read-write",
"size": "32",
"fields": {"Slave_Address": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "7",
"desc": "Address used by the IIC bus interface when in slave mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TX_FIFO_OCY": {"description": "Transmit FIFO Occupency Register",
"address_offset": "0x114",
"access": "read-only",
"size": "32",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 indicates that
10 locations are full in the FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO_OCY": {"description": "Recieve FIFO Occupency Register",
"address_offset": "0x118",
"access": "read-only",
"size": "32",
"fields": {"Occupancy_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 indicates that
10 locations are full in the FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TEN_ADR": {"description": "Slave Ten Bit Address Register",
"address_offset": "0x11C",
"access": "read-write",
"size": "32",
"fields": {"MSB of Slave Address": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "3",
"desc": "Three MSBs of the 10-bit address used by the AXI IIC bus interface when in slave mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"RX_FIFO_PIRQ": {"description": "Recieve FIFO Programmable Depth Interrupt Register",
"address_offset": "0x120",
"access": "read-write",
"size": "32",
"fields": {"Compare Value": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Bit[3] is the MSB. A binary value of 1001 implies that when
10 locations in the receive FIFO are filled, the receive FIFO
interrupt is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"GPO": {"description": "General Purpose Output Register",
"address_offset": "0x124",
"access": "read-write",
"size": "1",
"fields": {"General Purpose Outputs": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The LSB (Bit[0]) is the first bit populated
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUSTA": {"description": "Timing Parameter TSUSTA Register",
"address_offset": "0x128",
"access": "read-write",
"size": "32",
"fields": {"TSUSTA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Setup time for a repeated START condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUSTO": {"description": "Timing Parameter TSUSTO Register",
"address_offset": "0x12C",
"access": "read-write",
"size": "32",
"fields": {"TSUSTO": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Setup time for a repeated STOP condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THDSTA": {"description": "Timing Parameter THDSTA Register",
"address_offset": "0x130",
"access": "read-write",
"size": "32",
"fields": {"THDSTA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Hold time for a repeated START condition.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TSUDAT": {"description": "Timing Parameter TSUDAT Register",
"address_offset": "0x134",
"access": "read-write",
"size": "32",
"fields": {"TSUDAT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Data Setup time
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TBUF": {"description": "Timing Parameter TBUF Register",
"address_offset": "0x138",
"access": "read-write",
"size": "32",
"fields": {"TBUF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bus free time between a STOP and START condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THIGH": {"description": "Timing Parameter THIGH Register",
"address_offset": "0x138",
"access": "read-write",
"size": "32",
"fields": {"THIGH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "High Period of the scl clock.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"TLOW": {"description": "Timing Parameter TLOW Register",
"address_offset": "0x140",
"access": "read-write",
"size": "32",
"fields": {"TLOW": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Low Period of scl clock.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THDDAT": {"description": "Timing Parameter THDDAT Register",
"address_offset": "0x144",
"access": "read-write",
"size": "32",
"fields": {"THDDAT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Data Hold time
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_quad_spi_0": {},
"axi_uart16550_0": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_1": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_10": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_11": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_2": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_3": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_4": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_5": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_6": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_7": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_8": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"axi_uart16550_9": {"RBR": {"description": "Receiver Buffer Register",
"address_offset": "0x1000",
"access": "read-only",
"size": "1",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"THR": {"description": "Transmitter Holding Register",
"address_offset": "0x1000",
"access": "write-only",
"size": "1",
"fields": {"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"IIR": {"description": "Interrupt Identification Register",
"address_offset": "0x1008",
"access": "read-only",
"size": "1",
"fields": {"INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"FCR": {"description": "FIFO Control Register",
"address_offset": "0x1008",
"access": "read-write",
"size": "1",
"fields": {"FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "1",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "1",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "1",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. The character in the shift register is overwritten but it is not transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as selected by the Even parity select bit. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by assuming that the framing error was due to next character start bit, so it samples start bit twice and then takes in following data. In FIFO mode, this error is associated with a particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits). In FIFO mode, this error is associated with a particular character in FIFO. The next character transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "1",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "1",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLL": {"description": "Divisor Latch (Least Significant Byte) Register",
"address_offset": "0x1000",
"access": "read-write",
"size": "1",
"fields": {"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud. The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
"DLM": {"description": "Divisor Latch (Most Significant Byte) Register",
"address_offset": "0x1004",
"access": "read-write",
"size": "1",
"fields": {"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud. The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
},
},
"ps7_afi_0": {},
"ps7_afi_1": {},
"ps7_afi_2": {},
"ps7_afi_3": {},
"ps7_coresight_comp_0": {},
"ps7_ddr_0": {},
"ps7_ddrc_0": {},
"ps7_dev_cfg_0": {},
"ps7_dma_ns": {},
"ps7_dma_s": {},
"ps7_ethernet_0": {},
"ps7_globaltimer_0": {},
"ps7_gpio_0": {},
"ps7_gpv_0": {},
"ps7_intc_dist_0": {},
"ps7_iop_bus_config_0": {},
"ps7_l2cachec_0": {},
"ps7_ocmc_0": {},
"ps7_pl310_0": {},
"ps7_pmu_0": {},
"ps7_qspi_0": {},
"ps7_qspi_linear_0": {},
"ps7_ram_0": {},
"ps7_ram_1": {},
"ps7_scuc_0": {},
"ps7_scugic_0": {},
"ps7_scutimer_0": {},
"ps7_scuwdt_0": {},
"ps7_slcr_0": {},
"ps7_uart_1": {},
"ps7_xadc_0": {},
}]. Thread: Worker-71
